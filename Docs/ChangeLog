------------------------------------------------------------
revno: 4229
committer: Iggy Galarza <iggy.galarza@oracle.com>
branch nick: mysql-5.6.7-rc-release_upgradecode
timestamp: Tue 2012-09-18 18:54:27 -0400
message:
  Created a new UpgradeCode for 5.6 Windows MSIs with a hardcoded rule to 
  check for 5.6.0 - 5.6.6 installations and remove them before installation. The 
  hardcoded rule is only valid for 5.6 msis and all new versions should have a unique
  UpgradeCode.
------------------------------------------------------------
revno: 4228 [merge]
committer: Andrei Elkin <andrei.elkin@oracle.com>
branch nick: mysql-5.6.7-rc-release
timestamp: Mon 2012-09-10 16:49:25 +0300
message:
  merging from Bug@14550945 fixes tree.
    ------------------------------------------------------------
    revno: 4223.1.1
    committer: Andrei Elkin <andrei.elkin@oracle.com>
    branch nick: 5.6-bug14550905-mts_recovery_alf
    timestamp: Sat 2012-09-08 15:18:33 +0300
    message:
      Bug#14550945 - MTS RECOVERY CRASHES AFTER THE SERVER RESTART WHEN REPOSITORY TYPE WAS CHANGED
      Bug#14578740 - MTS WITH --RELAY_LOG_INFO_REPOSITORY='FILE' REDUCES WORKERS TO SCREW-UP
      Bug#14550905 - RECOVERY TABLES FOR MTS DON'T REFLECT CHANGES TO NUMBER OF WORKERS
      
      (Post-itch-and-review changes)
      
      The Bug#14550945 reason is that the replication part of the server bootstrap erroneously 
      changed Relay-log info repository type and do not the same to the MTS Worker info.
      That made two tightly related piece of info be logically split which led to
      a crash when in the following START SLAVE was issued.
      
      Fixed with conducting not letting to migration whenever Worker repositories type is
      found to be different than the requested through the new --relay_log_info_repository value.
      whether to migrate to another repository type.
      Migration is denied and a warning is issued that
      the value of --relay_log_info_repository option is altered by the server.
      As an extra grace, this patch improves error reporting out of init_slave()
      failing branches.
      Also a former policy of tolerating error checking of the source or the destination
      repositories is changed to conservative. If either of the two found unusable
      at checking run in init_slave(), the runtime repositories won't be initialized at all
      to prevent running replication slave role on that server.
      
      Bug#14578740 fixes aim at refining and simplifying logics of the file type
      repository locating and manipulating.
      Fixed with providing necessary context to compose a correct file name
      which existence is reliably checked etc.
      
      Bug#14550905 refines post-gaps filling Worker repositories cleanup
      when extra Workers info from the last slave session finally becomes redundant.
      It is deleted as the extra table records so as extra worker files, unambiguously
      now thanks to Bug#14578740 fixes.
------------------------------------------------------------
revno: 4227
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-567
timestamp: Thu 2012-09-06 15:52:50 +0200
message:
  Revert CXX to g++ for builds on 32 bit OSX, since Clang causes crash
    Need to investigate further
  Also, drop --debug-server from --embedded test line in 5.6.release test
    This serves no purpose, and now we will actually start the non-debug
    server at least once.
------------------------------------------------------------
revno: 4226
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-567
timestamp: Thu 2012-09-06 12:36:33 +0200
message:
  Added missing -rc to VERSION
------------------------------------------------------------
revno: 4225
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-567
timestamp: Wed 2012-09-05 10:57:19 +0200
message:
  Bug #14581495 MTR MISTAKENLY TRIES TO USE MYSQL_CLIENT_TEST_EMBEDDED WHEN IN EMBEDDED MODE
  
    Fix is to never look for mysql_client_test_embedded.
    Also, return empty string instead of trying to process if not found.
------------------------------------------------------------
revno: 4224
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-567
timestamp: Tue 2012-09-04 10:44:17 +0200
message:
  Remove mysql_client_test_embedded from SVR4 builds
------------------------------------------------------------
revno: 4223
tags: clone-5.6.7-rc-build
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-5.6
timestamp: Mon 2012-09-03 15:26:57 +0530
message:
  This test case also must mask the maximum row size because
  of the dependency with the page size.  
------------------------------------------------------------
revno: 4222
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-5.6
timestamp: Mon 2012-09-03 14:12:22 +0530
message:
  For this test case also, the maximum row size is masked because
  it depends on the page size. 
------------------------------------------------------------
revno: 4221 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-5.6
timestamp: Mon 2012-09-03 12:49:26 +0530
message:
  Merge from mysql-5.5 to mysql-5.6. 
    ------------------------------------------------------------
    revno: 2875.392.77 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.5
    timestamp: Mon 2012-09-03 11:57:25 +0530
    message:
      Merge from mysql-5.1 to mysql-5.5. 
        ------------------------------------------------------------
        revno: 2661.851.43
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.1
        timestamp: Mon 2012-09-03 11:33:05 +0530
        message:
          The test case result file must not depend on the page size used.
          So removing the maximum row size from the error message and 
          replacing it with text. 
------------------------------------------------------------
revno: 4220
committer: Mattias Jonsson <mattias.jonsson@oracle.com>
branch nick: b11755685-56
timestamp: Sat 2012-09-01 11:27:06 +0200
message:
  Bug#11755685: EXTEND LIMIT BEYOND 1024 PARTITIONS
  
  post-push fix: Updated test.
------------------------------------------------------------
revno: 4219
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-5.6
timestamp: Sat 2012-09-01 14:03:32 +0530
message:
  Fixing test case failure.
------------------------------------------------------------
revno: 4218 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-5.6
timestamp: Sat 2012-09-01 12:29:01 +0530
message:
  Merge from mysql-5.5 to mysql-5.6. 
    ------------------------------------------------------------
    revno: 2875.392.76 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.5
    timestamp: Sat 2012-09-01 11:27:53 +0530
    message:
      Merge from mysql-5.1 to mysql-5.5. 
        ------------------------------------------------------------
        revno: 2661.851.42
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.1
        timestamp: Fri 2012-08-31 15:42:00 +0530
        message:
          Bug #13453036 ERROR CODE 1118: ROW SIZE TOO LARGE - EVEN 
          THOUGH IT IS NOT.
          
          The following error message is misleading because it claims 
          that the BLOB space is not counted.  
          
          "ERROR 1118 (42000): Row size too large. The maximum row size for 
          the used table type, not counting BLOBs, is 8126. You have to 
          change some columns to TEXT or BLOBs"
          
          When the ROW_FORMAT=compact or ROW_FORMAT=REDUNDANT is used,
          the BLOB prefix is stored inline along with the row.  So 
          the above error message is changed as follows depending on
          the row format used:
          
          For ROW_FORMAT=COMPRESSED or ROW_FORMAT=DYNAMIC, the error
          message is as follows:
          
          "ERROR 42000: Row size too large (> 8126). Changing some
          columns to TEXT or BLOB may help. In current row format, 
          BLOB prefix of 0 bytes is stored inline."
          
          For ROW_FORMAT=COMPACT or ROW_FORMAT=REDUNDANT, the error
          message is as follows:
          
          "ERROR 42000: Row size too large (> 8126). Changing some
          columns to TEXT or BLOB or using ROW_FORMAT=DYNAMIC or 
          ROW_FORMAT=COMPRESSED may help. In current row
          format, BLOB prefix of 768 bytes is stored inline."
          
          rb://1252 approved by Marko Makela
------------------------------------------------------------
revno: 4217
committer: Mattias Jonsson <mattias.jonsson@oracle.com>
branch nick: b11755685-56
timestamp: Sat 2012-09-01 02:13:32 +0200
message:
  Bug#11755685: EXTEND LIMIT BEYOND 1024 PARTITIONS
  
  Extending limit to 8192 partitions.
  
  Also changing a minor performance issue with the loop
  over used partitions in scan_time.
------------------------------------------------------------
revno: 4216
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6-cleanup
timestamp: Sat 2012-09-01 00:49:28 +0200
message:
  Bug#13915200 - SET GLOBAL DEBUG CAUSES CRASHES IN DBUG.C, RACE CONDITIONS
  
  Backport from mysql-trunk to mysql-5.6
------------------------------------------------------------
revno: 4215 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6-cleanup
timestamp: Fri 2012-08-31 23:07:56 +0200
message:
  Local merge
    ------------------------------------------------------------
    revno: 4213.1.1
    committer: Harin Vadodaria<harin.vadodaria@oracle.com>
    branch nick: mysql-56
    timestamp: Sat 2012-09-01 02:21:54 +0530
    message:
      wl#6443 : Deprecate features in mysql-5.6-rc - SrvGen
      
      Description : Backporting from mysql-trunk to mysql-5.6.
                    Introduced deprecation warnings for
                    time_format, date_format, datetime_format
                    and max_tmp_tables.
                    Introduced deprecation warnings for
                    --plugin-xyz options.
                    Removed host table creation and introduced
                    deprecation warning in mysql_upgrade for
                    a non-empty host table.
                    
------------------------------------------------------------
revno: 4214
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6-cleanup
timestamp: Fri 2012-08-31 23:04:05 +0200
message:
  Bug#14113704 - A STAT ON A NON EXISTING FILE CREATING A FILE RECORD IN PFS
  
  Post merge fix: do not call release_file(NULL)
------------------------------------------------------------
revno: 4213
committer: kevin.lewis@oracle.com
branch nick: mysql-5.6
timestamp: Fri 2012-08-31 14:33:30 -0500
message:
  Bug #14571373 - INNODB: NEW WARNINGS ON WINDOWS IN 5.6 BRANCH
  Clean up compiler warnings
  Approved by Marko, rb:1261
------------------------------------------------------------
revno: 4212 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6-bug14569746
timestamp: Fri 2012-08-31 21:06:36 +0200
message:
  Local merge
    ------------------------------------------------------------
    revno: 4210.1.1
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-merge
    timestamp: Fri 2012-08-31 16:03:47 +0200
    message:
      Bug#12762891 SSL.CMAKE FILE IS BROKEN WHEN USING CUSTOM OPENSSL BUILD
      
      Extra patch for windows:
      The target create_initial_database runs mysqld,
      which needs to load the openssl dll's.
      Copy them to the same directory as mysqld.
------------------------------------------------------------
revno: 4211
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6-bug14569746
timestamp: Fri 2012-08-31 18:24:08 +0200
message:
  Bug#14569746
  
  Improved the robustness of table performance_schema.session_connect_connect_attrs.
  Improved test coverage
  
  See the bug report for more details.
------------------------------------------------------------
revno: 4210 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6-bug14563084
timestamp: Fri 2012-08-31 15:14:39 +0200
message:
  Local merge
    ------------------------------------------------------------
    revno: 4208.1.4
    committer: Norvald H. Ryeng <norvald.ryeng@oracle.com>
    branch nick: mysql-5.6-14499331
    timestamp: Fri 2012-08-31 14:11:16 +0200
    message:
      Bug#14499331 ASSERTION FAILED: EXEC_METHOD != EXEC_MATERIALIZATION ||
      .....
      
      Problem: An assertion fires when using JOIN_CACHE and the query
      contains an IN subquery query with a subquery that is expected to
      return a single row but returns more than one.
      
      The innermost subquery is evaluated when JOIN::optimize() for the IN
      subquery calls make_join_statistics(), which again calls
      get_quick_record_count(). When the innermost subquery returns more
      than one row where only a single row is expected,
      select_singlerow_subselect::send_data registers a warning in the THD
      object. If the subquery is evaluated as part of
      JOIN_CACHE::generate_full_extensions(), this warning goes unnoticed,
      since the function doesn't check THD::is_error() before returning
      NESTED_LOOP_OK.
      
      Execution continues until
      Item_in_subselect::finalize_materialization_transform() notices an
      error and aborts its attempt to use materialization, leaving the
      subselect object in an inconsistent state, which is later discovered
      by the assertion in Item_in_subselect::exec().
      
      Fix: Check for THD::is_error() after calling get_quick_record_count()
      in make_join_statistics().
    ------------------------------------------------------------
    revno: 4208.1.3
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2012-08-31 19:02:00 +0800
    message:
      Fix Bug #14560228 - IMPLEMENTED PIPE AS AN ALLOWED SEPARATOR YET FOR 
      INNODB_MEMCACHE.CONTAINERS.VALU
      
      rb://1254 approved by Sunny Bains
    ------------------------------------------------------------
    revno: 4208.1.2
    committer: Olav Sandstaa <olav.sandstaa@oracle.com>
    branch nick: icp-testcase-5.6
    timestamp: Fri 2012-08-31 12:57:35 +0200
    message:
      Follow-up patch after fix for Bug#14503142:
      
      Adjusting test file to handle variations in record estimate in explain
      output. The variation is caused by InnoDB when running the test with
      non-default InnoDB page sizes.
    ------------------------------------------------------------
    revno: 4208.1.1
    committer: Olav Sandstaa <olav.sandstaa@oracle.com>
    branch nick: set-end-range-5.6
    timestamp: Fri 2012-08-31 11:27:53 +0200
    message:
      Follow-up patch after fix for Bug#14503142.
      
      The fix for Bug#14503142 introduced a new public handler function
      handler::set_end_range(). This function can be used a few places
      in the existing handler code to simplify setting of end_range.
------------------------------------------------------------
revno: 4209
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6-bug14563084
timestamp: Fri 2012-08-31 12:14:38 +0200
message:
  Bug#14563084 
  
  Improved the robustness of table performance_schema.session_connect_attrs.
  
  See the bug report for more details.
------------------------------------------------------------
revno: 4208
committer: Oystein Grovlen <oystein.grovlen@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-31 11:05:22 +0200
message:
  Bug#14499409: CRASH IN KEY_COPY() WITH ROLLUP AND LOOSESCAN SEMIJOIN
  
  GROUP BY WITH ROllUP will normally require a temporary table,
  but if grouping on a constant (e.g., GROUP BY 1), the temporary
  table is skipped and one may add sorting without a temporary
  table.  Semijoin LooseScan depends on scanning in index order
  to eliminate duplicates.  Hence, switching to use filesort
  instead will not work.
  
  Fix: If an index is not to be used for group by, force use of 
  temporary table if LooseScan is to be used.  This prevents
  sorting to be added on the same table.
------------------------------------------------------------
revno: 4207
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-31 10:53:16 +0300
message:
  Bug#14220701 ONLINE SECONDARY INDEX CREATION MAY READ FREED OFF-PAGE COLUMNS
  
  This turned out to be a false alarm. The off-page columns for
  secondary index entries would already be fetched by the row_build()
  call in row_merge_read_clustered_index().
  
  innobase_online_rebuild_log_free(): Assert that the data dictionary
  cache is exclusively locked during the call.
  
  row_merge_insert_index_tuples(): Add assertions and clarify comments.
  Assert that there are no references to off-page columns in secondary
  index records.
  
  row_merge_skip_rec(): Remove (replace with direct calls to
  row_log_table_is_rollback()).
  
  row_log_table_apply_delete(): Adjust comments and formatting.
  
  row_undo_ins_parse_undo_rec(): Cleanup (code deduplication).
  
  dict_stats_table_clone_create(): Cleanup. Reset the index flags
  related to online index creation or table rebuild. The flags were
  checked in dict_stats_should_ignore_index() already.
  
  rb:1255 approved by Jimmy Yang
------------------------------------------------------------
revno: 4206
committer: Norvald H. Ryeng <norvald.ryeng@oracle.com>
branch nick: mysql-5.6-14500792
timestamp: Fri 2012-08-31 09:09:56 +0200
message:
  Bug#14500792 ASSERTION FAILED: (*REF)->IS_TEMPORAL(), FILE ITEM.CC,
  LINE 7581
  
  Problem: A query with GROUP BY WITH ROLLUP comparing a grouping column
  using the IN operator causes an assertion to fire.
  
  During rollup processing, Item_null_result items are generated for the
  NULL values in the rollup rows by JOIN::rollup_make_fields(). When
  comparing using the IN operator, the grouping value is represented as
  an Item_ref pointing to an Item_null_result.
  Item_ref::val_time_temporal() asserts that its ref is a temporal item
  by checking (*ref)->is_temporal(). This causes the field type to be
  checked, and is_temporal_type() defines that MYSQL_TYPE_NULL is not a
  temporal type. Therefore, the assertion fires.
  
  Fix: Add a constructor to Item_null_result that sets the field and
  result types so that they can be set to the correct type for that
  column when instantiating Item_null_result in JOIN::rollup_init() and
  JOIN::rollup_make_fields().
------------------------------------------------------------
revno: 4205 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-31 09:56:28 +0300
message:
  Merge mysql-5.5 to mysql-5.6.
    ------------------------------------------------------------
    revno: 2875.392.75 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.5
    timestamp: Fri 2012-08-31 09:53:13 +0300
    message:
      Merge mysql-5.1 to mysql-5.5.
        ------------------------------------------------------------
        revno: 2661.851.41
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.1
        timestamp: Fri 2012-08-31 09:51:27 +0300
        message:
          Add forgotten have_debug.inc to a test.
------------------------------------------------------------
revno: 4204
committer: Nirbhay Choubey <nirbhay.choubey@oracle.com>
branch nick: 5.6
timestamp: Fri 2012-08-31 12:16:44 +0530
message:
  Bug#14513708 : postfix for an affected test.
------------------------------------------------------------
revno: 4203
committer: kevin.lewis@oracle.com
branch nick: mysql-5.6
timestamp: Thu 2012-08-30 18:20:21 -0500
message:
  Bug#14558324 - INNODB ASSERTION ERROR WHEN UNKNOWN OPTION ENCOUNTERED
  
  Current directory was not set to a valid folder so Windows returned
  ERROR_ACCESS_DENIED for os_file_create().  5.6 code had been changed to
  report the call stack as an assert instead of just exit(1); when an unknown
  error is returned from the OS.  So this patch uses exit(1) for non-debug builds
  and an assert for debug builds.
------------------------------------------------------------
revno: 4202 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-08-30 22:08:54 +0300
message:
  Merge mysql-5.5 to mysql-5.6.
    ------------------------------------------------------------
    revno: 2875.392.74 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.5
    timestamp: Thu 2012-08-30 22:01:23 +0300
    message:
      Merge mysql-5.1 to mysql-5.5.
        ------------------------------------------------------------
        revno: 2661.851.40
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.1
        timestamp: Thu 2012-08-30 21:53:41 +0300
        message:
          Bug#14554000 CRASH IN PAGE_REC_GET_NTH_CONST(NTH=0) DURING COMPRESSED
          PAGE SPLIT
          
          page_rec_get_nth_const(): Map nth==0 to the page infimum.
          
          btr_compress(adjust=TRUE): Add a debug assertion for nth>0. The cursor
          should never be positioned on the page infimum.
          
          btr_index_page_validate(): Add test instrumentation for checking the
          return values of page_rec_get_nth_const() during CHECK TABLE, and for
          checking that the page directory slot 0 always contains only one
          record, the predefined page infimum record.
          
          page_cur_delete_rec(), page_delete_rec_list_end(): Add debug
          assertions guarding against accessing the page slot 0.
          
          page_copy_rec_list_start(): Clarify a comment about ret_pos==0.
          
          rb:1248 approved by Jimmy Yang
        ------------------------------------------------------------
        revno: 2661.851.39
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.1
        timestamp: Thu 2012-08-30 21:49:24 +0300
        message:
          Bug#14547952: DEBUG BUILD FAILS ASSERTION IN RECORDS_IN_RANGE()
          
          ha_innodb::records_in_range(): Remove a debug assertion
          that prohibits an open range (full table).
          
          The patch by Jorgen Loland only removed the assertion from the
          built-in InnoDB, not from the InnoDB Plugin.
------------------------------------------------------------
revno: 4201
committer: Nirbhay Choubey <nirbhay.choubey@oracle.com>
branch nick: B14513708-5.6
timestamp: Thu 2012-08-30 23:59:28 +0530
message:
  Bug #14513708 .MYLOGIN.CNF SHOULD BE IGNORED IF ITS
  NOT EXCLUSIVELY READ/WRITABLE BY CURR. USER
  
  In the option handling system, the file permissions
  for login file were being checked like other option
  files.
  
  Added a check separately for login file to make sure
  that it gets ignored if its not exclusively readable/
  writable by current user. Also moved the permissions-
  checking code to a new function.
  
  Manually tested.
------------------------------------------------------------
revno: 4200
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-08-30 20:05:21 +0300
message:
  Backport WL#6347 InnoDB: Index level compression stats
  from mysql-trunk into mysql-5.6
------------------------------------------------------------
revno: 4199
committer: Mattias Jonsson <mattias.jonsson@oracle.com>
branch nick: b14247298-56
timestamp: Thu 2012-08-30 17:06:13 +0200
message:
  Bug#14247298: Failing dbug_assert in Item_in_subquery::val_int()
  
  Debug regression from WL#4443.
  
  Item_in_subselect::val_int() was called from get_mm_tree() when
  it only should be used in Item_in_optimizer.
  
  Fixed by skipping evaluation if item has subquery.
------------------------------------------------------------
revno: 4198 [merge]
committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-08-30 17:00:33 +0400
message:
  Auto-merged.
    ------------------------------------------------------------
    revno: 4195.1.25
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-merge
    timestamp: Thu 2012-08-30 13:44:55 +0200
    message:
      Fix broken -Werror -O3 in pushbuild.
      Platforms used:
      Oracle Linux Server release 6.3
      gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4)
      
      Fedora release 14 (Laughlin)
      gcc (GCC) 4.5.1 20100924 (Red Hat 4.5.1-4)
------------------------------------------------------------
revno: 4197 [merge]
committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-08-30 15:01:06 +0400
message:
  Auto-merged.
    ------------------------------------------------------------
    revno: 4195.1.24
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-30 12:39:59 +0300
    message:
      Fixup comments in innodb-blob.test
    ------------------------------------------------------------
    revno: 4195.1.23
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-30 12:12:57 +0300
    message:
      Fixup the comment after marko.makela@oracle.com-20120830085157-l81p4p7787c2fm1i
    ------------------------------------------------------------
    revno: 4195.1.22 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-30 11:56:52 +0300
    message:
      Merge mysql-5.6 to working copy.
        ------------------------------------------------------------
        revno: 4195.4.1
        committer: Ashish Agarwal<ashish.y.agarwal@oracle.com>
        branch nick: mysql-5.6
        timestamp: Thu 2012-08-30 14:11:09 +0530
        message:
          BUG#14292624: VALIDATE_PASSWORD_STRENGTH(NULL) CRASHES SERVER
          
          PROBLEM: Server crashes when NULL is passed as
                   a password to VALIDATE_PASSWORD_STRENGTH
                   sql function. In wl#2739 NULL condition
                   was not checked.
          
          SOLUTION: Introducing a check for NULL as password,
                    VALIDATE_PASSWORD_STRENGTH(NULL) will
                    return NULL, VALIDATE_PASSWORD_STRENGTH('NULL')
                    will consider NULL as a string and calculate
                    its strength.
    ------------------------------------------------------------
    revno: 4195.1.21
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-30 11:51:57 +0300
    message:
      Fix nondeterminism in a test.
    ------------------------------------------------------------
    revno: 4195.1.20
    committer: Olav Sandstaa <olav.sandstaa@oracle.com>
    branch nick: icp-perf-5.6
    timestamp: Thu 2012-08-30 10:05:31 +0200
    message:
      Fix for Bug#14503142 PERFORMANCE REGRESSION FOR DESCENDING RANGE SCAN WHEN 
                           USING ICP
      
      The performance regression is caused by use of ICP in combination with
      a descending range scan that is using QUICK_SELECT_DESC. The
      QUICK_SELECT_DESC object executes the range scan by reading the index
      using ha_index_prev() and then evaluating if the record is within the
      current range. This works fine when we have not pushed any index
      condition to the storage engine since every record will be returned
      and evaluated by QUICK_SELECT_DESC.get_next(). When ICP is used, the
      call to ha_index_prev() will only return records that do not get
      filtered by the pushed index condition. In this case, as soon as
      QUICK_SELECT_DESC.get_next() tries to read the first record that is
      outside the current range, the ICP implementation in the storage
      engine will filter it away and continue reading from the index without
      finding any qualifying records. It will continue reading from the
      index until it has read to the end of the index. The increased
      execution time is caused by the ICP implementation reading to the
      end of the index instead of stopping when it has reached the end of
      the current range.
      
      This patch solves this problem by adding a new handler call
      handler::set_end_range() which informs the storage engine about the
      end of the current index scan. The ICP implementation in the storage
      engine will use this information and check that the next record is
      within this range. For each range that QUICK_SELECT_DESC.get_next()
      needs to read, it will use this call to let the storage engine know
      about the end of the range.
    ------------------------------------------------------------
    revno: 4195.1.19
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-30 10:46:21 +0300
    message:
      Bug#14543059 DUPLICATE STRUCT TYPE DEFINITIONS IN INNODB SOURCE CODE
      Thi is a backport from mysql-trunk to mysql-5.6; original
      bzr revision id: marko.makela@oracle.com-20120828112616-pwnoijknfxudifa7
      
      Declare all structs with a type name that ends in _t instead of _struct.
      
      Replace all instances of
      
      typedef struct foo_struct foo_t;
      
      with forward declarations like this:
      
      struct foo_struct;
      
      Remove unnecessary forward declarations of structs.
      
      The bulk conversion was performed by a Perl snippet:
      perl -i -pe 's/_struct/_t/g;
      s/^typedef struct\s+([a-zA-Z][a-zA-Z0-9_]*_t)\s+\1\;$/struct $1\;/g;' \
      storage/innobase/*/*[ch]
      
      After this, some manual adjustments were made, and the code was
      grepped for 'typedef struct' and 'typedef enum'.
      
      The patch itself was grepped for '^-.*"' to ensure that no strings
      were changed (there is trx_lock_structs in the INFORMATION_SCHEMA
      tables).
      
      rb:1246 approved by Sunny Bains
    ------------------------------------------------------------
    revno: 4195.1.18
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2012-08-29 19:38:24 +0300
    message:
      Fix Bug#14525151 DATAFILES TOUCHED BY 5.6 ARE NOT READABLE BY 5.5
      
      Revert parts of sergey.vojtovich@oracle.com-20120529064458-va87z5ccpanrv3xi
      in order to restore the default value of innodb_checksum_algorithm to
      'innodb'.
    ------------------------------------------------------------
    revno: 4195.1.17
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-merge
    timestamp: Thu 2012-08-30 08:24:57 +0200
    message:
      Bug#14494275 HEAP CORRUPTION IN DECIMAL2BIN WITH LOW MAX_SORT_LENGTH
      
      The problem was that if the user sets a very small max_sort_length
      this value was honored by the function sortlength() but
      later ignored by make_sortkey().
      This can result in buffer overrun.
      
      Solution one: always stay within the bounds of max_sort_length
      as specified by the user.
      This is what we have always done, even if the documentation says
      it is only done for strings/blobs.
      
      Sorting results may be a bit strange, since we use only the first few bytes
      of int/float/decimal/time.
    ------------------------------------------------------------
    revno: 4195.1.16 [merge]
    committer: Jorgen Loland <jorgen.loland@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-30 07:57:45 +0200
    message:
      Null-merge from 5.5
        ------------------------------------------------------------
        revno: 2875.392.73 [merge]
        committer: Jorgen Loland <jorgen.loland@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2012-08-30 07:56:52 +0200
        message:
          Null-merge from 5.1
            ------------------------------------------------------------
            revno: 2661.851.38
            committer: Jorgen Loland <jorgen.loland@oracle.com>
            branch nick: mysql-5.1
            timestamp: Tue 2012-08-28 14:51:01 +0200
            message:
              Bug#14547952: DEBUG BUILD FAILS ASSERTION IN RECORDS_IN_RANGE()
              
              ha_innobase::records_in_range(): Remove a debug assertion
              that prohibits an open range (full table).
              This assertion catches unnecessary calls to this method, 
              but such calls are not harming correctness.
    ------------------------------------------------------------
    revno: 4195.1.15
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: 5.6
    timestamp: Thu 2012-08-30 12:20:21 +1000
    message:
      Bug#14555404 SHOW INNODB STATUS AND I_S SHOW WRONG TRANSACTION START TIME AND DURATION
      
      Revert:
       revno: 3728
       revision-id: sunny.bains@oracle.com-20120424024819-ldmmg62x1s77nvil
       parent: inaam.rana@oracle.com-20120424021948-ql69da0mcx5k5gy1
       committer: Sunny Bains <Sunny.Bains@Oracle.Com>
       branch nick: trunk
       timestamp: Tue 2012-04-24 12:48:19 +1000
       message:
        Bug#13993661 - GET RID OF STATIC COUNTER IN TRX_START_LOW(), USE THE TRX_T::ID AS THE COUNTER
      
          In trx_start_low() we use a static counter to control the number of
          gettimeofday() calls we make to set the trx_t::start_time. The trx_t::id
          is also a monotonically increasing counter and is local to the thread.
          Use that instead. This should reduce potential cache coherency issues.
      
          Approved by Inaam over IM.
      
      There is one additional change, remove the "optimisation" for the auto-commit
      read-only optimisation too.
      
      We should set the transaction start time from the session variables ideally
      and avoid all calls to set the time. Perhaps even get rid of this field from
      trx_t.
      
      Approved by Jimmy Yand over IM.
    ------------------------------------------------------------
    revno: 4195.1.14
    committer: kevin.lewis@oracle.com
    branch nick: mysql-5.6
    timestamp: Wed 2012-08-29 14:45:54 -0500
    message:
      Bug#14320968   Intermittent test failure on Windows
      Add a sleep 2 so that the OS can release handles held by
      previous mysqld.
    ------------------------------------------------------------
    revno: 4195.1.13
    committer: Sven Sandberg <sven.sandberg@oracle.com>
    branch nick: 5.6
    timestamp: Wed 2012-08-29 18:40:15 +0200
    message:
      BUG#14509140 - COM_BINLOG_DUMP_GTID MISSES INPUT VALIDATION
      Previous fix did not address all problems.
      This fix:
       - protects against name_size being bigger than the 'name' buffer
         (could happen if only the packet contained that many bytes)
       - protects the argument of CHECK_PACKET_SIZE from overflow
         by keeping a count of the number of bytes todo.
       - simplifies the code by combining the check, the read, and the
         pointer increment into a single macro call
       - prevents test case from being run in embedded mode (can't
         connect with a client in embedded mode)
    ------------------------------------------------------------
    revno: 4195.1.12
    committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
    branch nick: mysql-5.6-bug14516798
    timestamp: Wed 2012-08-29 16:11:54 +0200
    message:
      Fix for bug #14516798 "PREPARE_INPLACE_ALTER_TABLE NOT UNDER EXCLUSIVE
      MDL WHEN LOCK=SHARED".
      
      ALTER TABLE executed using in-place algorithm could trigger an
      InnoDB assertion if during prepare phase of ALTER TABLE, the
      table being altered happened to be used in more than one connection.
      
      The problem was that for types of in-place ALTER TABLE which
      require strong lock during the prepare phase, the SQL-layer acquired
      only SNW metadata lock, thus allowing concurrent reads during
      this phase (as per WL specification). At the same time InnoDB
      assumed that during the prepare phase the table is used only by the
      connection executing ALTER TABLE. This mismatch led to assertion
      failure in InnoDB.
      
      This fix addresses the problem by ensuring that for in-place
      ALTER TABLE variants which require strong lock during the prepare
      phase, the SQL-layer acquires an exclusive (X) metadata lock. To
      support this change we had to add new variant of locking requirements
      for in-place ALTER TABLE - HA_ALTER_INPLACE_SHARED_LOCK_AFTER_PREPARE,
      to be used by InnoDB instead of HA_ALTER_INPLACE_SHARED_LOCK
      (since InnoDB requires X lock during prepare phase and the
      latter acquires only SNW lock for both prepare and main phase).
      
      Commit on behalf of Dmitry Lenev.
    ------------------------------------------------------------
    revno: 4195.1.11
    committer: Olav Sandstaa <olav.sandstaa@oracle.com>
    branch nick: icp-perf-5.6
    timestamp: Wed 2012-08-29 15:40:11 +0200
    message:
      Fix for Bug#14287654 PERFORMANCE REGRESSION FOR DESCENDING REF ACCESS SCAN
                           ON INDEX WHEN USING ICP
      
      The performance regression is caused by use of ICP in combination with
      ref access that reads from an index in descending order.
      
      The server uses the function join_read_prev_same() (in
      sql_executor.cc) to read records. This function uses
      handler::ha_index_next() to get the next record from the table and
      then checks if the returned record has the same key value as the ref
      key. This works fine when ICP is not used. With ICP this produces
      correct results but can cause performance issues. The cause for this
      is the use of ha_index_next() which will read records from the index
      until it has found a record that satisfies the pushed index condition.
      Since the storage engine does not know that it should stop reading
      when a record with a different key is found, it will continue reading
      records from the index until it has found a qualifying record. In the
      case reported in this bug the storage engine will continue scaning
      the index until it has reached the beginning of the index.
      
      The fix for this problem is to not use ICP when ref access in
      descending order is used for the query.
    ------------------------------------------------------------
    revno: 4195.1.10
    committer: Georgi Kodinov <Georgi.Kodinov@Oracle.com>
    branch nick: B14506073-5.6
    timestamp: Wed 2012-08-29 16:34:48 +0300
    message:
      Bug #14506073: mysql_secure_installation breaks with old_passwords=2
      Fixed the mysql_secure_installation shell and perl scripts to do
      separate updates of the different password types based on the value 
      of the mysql.user.plugin column, so they can set the old_passwords
      value properly while calculating the password needed.
    ------------------------------------------------------------
    revno: 4195.1.9 [merge]
    committer: Sergey Vojtovich <sergey.vojtovich@oracle.com>
    branch nick: mysql-5.6-push
    timestamp: Wed 2012-08-29 16:57:01 +0400
    message:
      Merge.
        ------------------------------------------------------------
        revno: 4195.3.1
        committer: Sergey Vojtovich <sergey.vojtovich@oracle.com>
        branch nick: mysql-5.6-bug14000697
        timestamp: Wed 2012-08-29 16:49:37 +0400
        message:
          BUG#14000697 - 65077: INTERNAL TEMPORARY TABLES ARE CONTENDED ON
                         THR_LOCK_MYISAM
          
          MyISAM registers all open tables on myisam_open_list. This list is
          protected by global mutex (THR_LOCK_myisam). Under concurrent
          load it causes excessive THR_LOCK_myisam mutex contention.
          
          Fixed by not registering internal temporary tables on
          myisam_open_list, similarly to MEMORY engine.
    ------------------------------------------------------------
    revno: 4195.1.8 [merge]
    committer: Georgi Kodinov <Georgi.Kodinov@Oracle.com>
    branch nick: B14458217-5.6
    timestamp: Wed 2012-08-29 15:01:54 +0300
    message:
      merge
        ------------------------------------------------------------
        revno: 4195.2.2 [merge]
        committer: Gopal Shankar <gopal.shankar@oracle.com>
        branch nick: sf_mysql-5.6
        timestamp: Wed 2012-08-29 16:26:41 +0530
        message:
          Merging revision 3957 from mysql-5.5
            ------------------------------------------------------------
            revno: 2875.392.72
            committer: Gopal Shankar <gopal.shankar@oracle.com>
            branch nick: sf_mysql-5.5
            timestamp: Wed 2012-08-29 16:22:02 +0530
            message:
              Bug#14364558 ASSERT `TABLE_LIST->PRELOCKING_PLACEHOLDER==FALSE'
                           FAILED IN CHECK_LOCK_AND_ST
              
              Updating test script to ignore the error text message
              and match only the error code.
        ------------------------------------------------------------
        revno: 4195.2.1
        committer: Sven Sandberg <sven.sandberg@oracle.com>
        branch nick: 5.6
        timestamp: Wed 2012-08-29 12:29:24 +0200
        message:
          BUG#14509140 - COM_BINLOG_DUMP_GTID MISSES INPUT VALIDATION
          Problem: COM_BINLOG_DUMP and COM_BINLOG_DUMP_GTID read from
          'packet' without first checking the size of 'packet'.
          Fix: Check that the data to be read fits in the packet.
    ------------------------------------------------------------
    revno: 4195.1.7
    committer: Georgi Kodinov <Georgi.Kodinov@Oracle.com>
    branch nick: B14458217-5.6
    timestamp: Wed 2012-08-29 15:00:08 +0300
    message:
      removed extra line after a merge
    ------------------------------------------------------------
    revno: 4195.1.6
    committer: Georgi Kodinov <Georgi.Kodinov@Oracle.com>
    branch nick: B14458217-5.6
    timestamp: Wed 2012-08-29 12:43:13 +0300
    message:
      removed the merge conflicts files
    ------------------------------------------------------------
    revno: 4195.1.5
    committer: Georgi Kodinov <Georgi.Kodinov@Oracle.com>
    branch nick: B14458217-5.6
    timestamp: Tue 2012-08-28 13:01:13 +0300
    message:
      Bug #14458217:  password validation plugin: crash when 
      with password(null)
      
      The code in PASSWORD() and OLD_PASSWORD() was passing
      a NULL pointer to the password validation plugin(s) instead 
      of a String class instance when a NULL is passed as an 
      argument and this was not expected by the plugin.
      
      Made sure all calls to check_password_policy() (in both
      PASSWORD() and OLD_PASSWORD()) always get an non-null
      String class by passing empty string when a NULL argument
      is supplied to these functions.
      Added debug assertions that all password validation plugin
      API calls always get non-null Strings.
      Test case added.
      Updated the test suite plugin list to allow platform independent
      loading of the password validation plugin.
    ------------------------------------------------------------
    revno: 4195.1.4
    committer: Norvald H. Ryeng <norvald.ryeng@oracle.com>
    branch nick: mysql-5.6-14498999
    timestamp: Wed 2012-08-29 09:30:35 +0200
    message:
      Bug#14498999 ASSERTION FAILED: INITED == INDEX IN
      HANDLER::HA_INDEX_END / SUM/GROUP BY DESC
      
      This bug is a regression introduced by WL#6071.
      
      Problem: An assertion may fire when grouping and sorting in descending
      order on an indexed column using QUICK_GROUP_MIN_MAX_SELECT.
      
      The query is executed by first creating a descending index using
      create_sort_index(), and then grouping.
      
      The QUICK_GROUP_MIN_MAX_SELECT object is created during
      optimization. During execution, create_sort_index() is used to sort
      for descending order. In find_all_keys(),
      QUICK_GROUP_MIN_MAX_SELECT::reset() is called, which again calls
      handler::ha_index_init() to initialize for index access. After
      sorting, create_sort_index() finishes by calling
      handler::ha_index_end() to end index access.
      
      In the next phase, execution reads this index and makes random
      accesses to populate with remaining fields. Therefore,
      init_read_record() calls handler::ha_rnd_init() to initialize for
      random access.
      
      When cleaning up after query execution, the QUICK_GROUP_MIN_MAX
      destructor expects the handler to be initialized for index access,
      which it is not, and an assertion fires.
      
      Fix: Call handler::ha_index_or_rnd_end() in the QUICK_GROUP_MIN_MAX
      destructor.
    ------------------------------------------------------------
    revno: 4195.1.3
    committer: kevin.lewis@oracle.com
    branch nick: mysql-5.6
    timestamp: Tue 2012-08-28 11:27:29 -0500
    message:
      Backport a change made to innodb-tablespace in mysql-trunk but not in
      mysql-5.6 which makes the query results into I_S.innodb_tablespaces
      more consistent and deterministic.
    ------------------------------------------------------------
    revno: 4195.1.2 [merge]
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-merge
    timestamp: Tue 2012-08-28 16:34:40 +0200
    message:
      NULL merge 5.5 => 5.6
        ------------------------------------------------------------
        revno: 2875.392.71 [merge]
        committer: Tor Didriksen <tor.didriksen@oracle.com>
        branch nick: mysql-5.5-commercial
        timestamp: Tue 2012-08-28 16:29:46 +0200
        message:
          merge 5.5.28-release => 5.5
            ------------------------------------------------------------
            revno: 2875.404.1
            committer: Tor Didriksen <tor.didriksen@oracle.com>
            branch nick: release
            timestamp: Tue 2012-08-28 16:13:03 +0200
            message:
              Bug#14549809 LINKING PROBLEM IN 5.5.28 BUILDS WITH THREADPOOL PLUGIN
              
              The use of Thread_iterator did not work on windows (linking problems).
              Solution: Change the interface between the thread_pool and the server
              to only use simple free functions.
              
              This patch is for 5.5 only (mimicks similar solution in 5.6)
    ------------------------------------------------------------
    revno: 4195.1.1
    committer: Sergey Glukhov <sergey.glukhov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2012-08-28 16:41:48 +0400
    message:
      Bug#14093521 SIMPLE SELECT..WHERE QUERY ON YEAR GIVES DIFFERENT ORDER BY TRANSFORMED RESULT
      Regression was introduced by Ole John's fix for Bug #58628.
      Before that fix result of copying key value to the buffer
      was ignored and the default field value was used as key value.
      After Ole John's fix, result of copying key is taken into
      account and in case of bad values(STORE_KEY_FATAL) 
      it is treated as impossibe condition, so no result is returned.
      The fix is remove the check for result of copying key value.
------------------------------------------------------------
revno: 4196
committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
branch nick: mysql-5.6
timestamp: Wed 2012-08-29 19:03:19 +0400
message:
  Bug#14348858: EXTRA ROWS IN RESULT WHEN SQL_BUFFER_RESULT IS USED WITH SUBQUERY
  AND MYISAM
  
  The join_init_read_record have to be used as a function for reading the
  first record when a table needs to be sorted. The code that sets this
  function was outside of the add_sorting_to_table function. This led to
  missing initialization in the case when the first non-const table needs to be
  sorted. In its turn this resulted in missing sorting step and filesort
  condition not being applied.
  
  Now add_sorting_to_table function also sets first record reading function
  appropriately.
------------------------------------------------------------
revno: 4195 [merge]
committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
branch nick: mysql-5.6
timestamp: Tue 2012-08-28 15:35:16 +0400
message:
  Auto-merged.
    ------------------------------------------------------------
    revno: 4193.1.3
    committer: Georgi Kodinov <Georgi.Kodinov@Oracle.com>
    branch nick: B14406181-5.6
    timestamp: Tue 2012-08-28 13:29:25 +0300
    message:
      Bug #14406181: expire_password functionality forgets to check if password 
        was changed
      The parser context flag whether the statement in question is a SET PASSWORD
      wasn't properly reset before all statements.
      Fixed by reseting it when constructing the parser context. 
      Test case added.
    ------------------------------------------------------------
    revno: 4193.1.2
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-5.6-bug14116386
    timestamp: Tue 2012-08-28 12:29:12 +0200
    message:
      Bug 14116386 - PERFSCHEMA.TABLE_LOCK_AGGREGATE_GLOBAL_4U_3T FAILS ON MYSQL-TRUNK SPORADICALLY
      
      Fixed the test scripts to be more robust.
      
      Instead of waiting in the default session for user X session to appear,
      which is complex and can fail due to race conditions,
      perform a select in session X to validate that session X is up.
    ------------------------------------------------------------
    revno: 4193.1.1
    committer: Martin Hansson <martin.hansson@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2012-08-28 10:52:33 +0200
    message:
      Bug#13985071: Additional re-recorded test cases.
------------------------------------------------------------
revno: 4194
committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
branch nick: mysql-5.6
timestamp: Tue 2012-08-28 15:31:48 +0400
message:
  Bug#14485935: CRASH IN CREATE_REF_FOR_KEY() ON SELECT WITH JOIN AND MANY WHERE CLAUSES
  Adjusted condition, assertion and test result.
------------------------------------------------------------
revno: 4193 [merge]
committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
branch nick: mysql-5.6
timestamp: Tue 2012-08-28 12:45:07 +0400
message:
  Auto.merged.
    ------------------------------------------------------------
    revno: 4191.1.7
    committer: Olav Sandstaa <olav.sandstaa@oracle.com>
    branch nick: deprecate-5.6
    timestamp: Tue 2012-08-28 10:10:31 +0200
    message:
      WL#6398 Deprecate features in mysql-5.6-rc
      
      This patch adds a deprecation warning for the system variable
      "multi_range_count".
    ------------------------------------------------------------
    revno: 4191.1.6
    committer: Jorgen Loland <jorgen.loland@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2012-08-28 09:54:27 +0200
    message:
      BUG#13736244: SQL_BIG_RESULT PRODUCES AN ADDITIONAL ROW 
                    FOR A JOIN+SUBQ+GROUP BY QUERY
           
      When a scalar subselect in the SELECT clause is also used for
      grouping and the "ordering for group by" can be resolved using 
      filesort on the first table, the subquery will be evaluated 
      1) once for each row combination in the query during sort index
      creation and 2) once for each row combination in the query 
      because end_send_group() will evaluate the group fields to
      see if the value changed. This is potentially a lot of 
      unnecessary work. The fix is to sort using a temp table in 
      such situations. 
    ------------------------------------------------------------
    revno: 4191.1.5
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2012-08-28 13:44:39 +0800
    message:
      Fix Bug #14523765 - CRASH WHEN SETTING "INNODB-API-ENABLE-MDL=1" USING
      MEMCACHED
      
      rb://1142 approved by Sunny Bains
    ------------------------------------------------------------
    revno: 4191.1.4
    committer: Manish Kumar<manish.4.kumar@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2012-08-28 10:16:39 +0530
    message:
      BUG#14237992 - RPL_SEMI_SYNC FAILURES ON TRUNK AS PART OF WL5223
      
      Problem: The rpl.rpl_semi_sync test fails on the trunk as a part of 
               wl#5223. The problem is that the slave is unable to get in 
               sync with the master on slow platforms which in the default
               duration of the timeout. So the wait_for_slave_status fails.
      
      Fix: The problem is solved by reducing the number of transactions 
           executed on the master which reduced the load on the slave. So 
           the slave has enough time to catch up with the master. The number 
           of transactions are reduced from 50 to 10 in this case.
    ------------------------------------------------------------
    revno: 4191.1.3
    committer: Gleb Shchepa <gleb.shchepa@oracle.com>
    branch nick: 5.6-bug13903404
    timestamp: Mon 2012-08-27 21:50:38 +0400
    message:
      Bug #13903404: EXPLAIN JSON DISPLAYS MATERIALIZED SUBQ WRONGLY
                   IF IN SELECT LIST
      
      Patch #3:
      
      EXPLAIN FORMAT=JSON still explain SJ materialization and derived
      table materialization in different ways:
      derived table mat. shows "using_temporary_table", "dependent" and
      "cacheable" key/value pairs in the "materialized_from_subquery"
      object, but for SJ materialization we output them in the outer
      "..._subquery" object.
      
      For the consistency with the derived table materialization output,
      the "using_temporary_table", "dependent" and "cacheable" key/value
      pairs has been moved into the "materialized_from_subquery" for all
      kinds of SJ materialization.
    ------------------------------------------------------------
    revno: 4191.1.2
    committer: Gleb Shchepa <gleb.shchepa@oracle.com>
    branch nick: 5.6-bug13903404
    timestamp: Mon 2012-08-27 21:45:37 +0400
    message:
      Bug #13903404: EXPLAIN JSON DISPLAYS MATERIALIZED SUBQ WRONGLY
                     IF IN SELECT LIST
      
      Patch #2:
      
      The structure of EXPLAIN FORMAT=JSON output for hash SJ
      materialization differs from the structure of index lookup and
      fullscan SJ materialization or derived table materialization
      output:
      
      for index lookup/fullscan SJ mat. and derived tables:
      
        "..._subqueries": [
          ...
          "table": {
            ...
            "materialized_from_subquery": {
              "query_block": {
                ...
              }, /* query_block */
            }, /* materialized_from_subquery */
          }, /* table */
          ...
      
      for has SJ materialization:
      
        "..._subqueries": [
          ...
          "table": {
            ...
          }, /* table */
          "query_block": {
            ...
          }, /* query_block */
          ...
      
      Thus, hash SJ materialization output:
      * lacks the "materialized_from_subquery"
        wrapper inside materialized table object and
      * has the "query_block" object of materialized
        source outside the materialized "table" object.
      
      Other (non-structural) issues:
      * the hash SJ materialized temporary table doesn't
        have a "table_name" string;
      * the "attached_condition" of that table doesn't make
        sense as far as actually we have eq_ref access for the
        parent table;
      * "cacheable" and "dependent" values have to be
        "false" and "true" respectively, since the value
        to look up depends on the outer value.
      
      
      For the consistency with other kinds of materialization,
      the "materialized_from_subquery" node has been created
      inside the "..._subqueries" block and the
      source of materialized table ("query_block" node) has
      been moved into that "materialized_from_subquery" node:
      
      1. The qep_row::is_materialized_from_subquery flag
         has been added to mark materialized tables for
         hash SJ materializations.
      
      2. The subquery_ctx::format_body() function has
         been updated to output the "materialized_from_subquery"
         node inside the materialized "table" object.
      
      Also:
      
      3. The "table_name" string has been added to the
         "table" object of the materialized subquery temporary
         table.
      
      4. The "attached_condition" string has been removed
         for hash SJ materialization.
      
      5. "cacheable" value has been set to "false" and
         "dependent" value has been set to "true" for
         materialized hash SJ.
    ------------------------------------------------------------
    revno: 4191.1.1
    committer: Gleb Shchepa <gleb.shchepa@oracle.com>
    branch nick: 5.6-bug13903404
    timestamp: Mon 2012-08-27 20:45:38 +0400
    message:
      Bug #13903404: EXPLAIN JSON DISPLAYS MATERIALIZED SUBQ WRONGLY
                     IF IN SELECT LIST
      
      Patch #1:
      
      When subquery materialization is used for a subquery in WHERE,
      it's displayed well, but when it's used for a subquery in the
      SELECT list, HAVING, ORDER BY or GROUP BY clause (missing
      "using_temporary_table" and "key": "<auto_key>"...).
      
      
      The Explain::explain_subqueries() function has been modified
      to treat hash SJ materialization in SELECT list and HAVING or
      GROUP/ORDER BY clause subqueries like we do for same
      materialization in WHERE (see subquery_ctx::format_body()
      below the "else if (using_temporary)" string).
      
      So, after this fix all subqueries with hash SJ materialization
      have a structure:
      
        "..._subqueries": [
          "using_temporary_table": true, 
          ...   
              "table": {
                 "access_type": "eq_ref",
                 "key": "<auto_key>",
                 "key_length": ...
                 "rows": 1,
                 "attached_condition": "..." 
              },    
              "query_block": {
           ...   
------------------------------------------------------------
revno: 4192 [merge]
committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
branch nick: mysql-5.6
timestamp: Mon 2012-08-27 20:23:19 +0400
message:
  Auto-merged.
    ------------------------------------------------------------
    revno: 4155.1.1
    committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
    branch nick: 14485935-5.6
    timestamp: Thu 2012-08-23 17:05:10 +0400
    message:
      Bug#14485935: CRASH IN CREATE_REF_FOR_KEY() ON SELECT WITH JOIN AND
      MANY WHERE CLAUSES
      The add_derived_key function didn't taken into account maximum number of
      keyparts and was creating keys of arbitrary length. This led to running out
      of space in an array in create_ref_for_key and eventually to memory
      corruption and crash.
      Now add_derived_key creates keys consisting of no more that MAX_REF_PARTS
      parts.
------------------------------------------------------------
revno: 4191
committer: Allen lai <zheng.lai@oracle.com>
branch nick: mysql-bug14221812
timestamp: Mon 2012-08-27 22:21:03 +0800
message:
    Bug#14221812 - ASSERT 0 IN ROW_SEL_GET_CLUST_REC_FOR_MYSQL,
  		 CLUST REC NOT FOUND FOR SEC IDX REC
  
    rb://1230 Approved by Marko
  
    This is basically address an issue that rows are skipped for primary
    index, but built into secondary index during online table rebuild.
    As bug described, row_merge_skip_rec() is called for primary index,
    but secondary index is still built. So the simple fix is to remove
    such row_merge_skip_rec() check when we insert row to index, so that
    they can be dropped altogether by online log application.
  
    However, the row_merge_skip_rec() is added mainly to address the BLOB
    issue, since BLOB can be dropped for rollback operation. To deal with
    it,we will need to log enough prefix so that any prefix index on blob
    data can be built even if the BLOB is dropped.
  
    In this implementation, we logged the row_ext_t for any such rows
    during its rollback drop, of course, only for dynamic and compressed
    table. And we will reconstruct a valid row_ext_t when we actually
    delete the entry in primary index as well as in secondary index.
------------------------------------------------------------
revno: 4190
committer: Martin Hansson <martin.hansson@oracle.com>
branch nick: mysql-5.6
timestamp: Mon 2012-08-27 15:59:12 +0200
message:
  Bug#13985071: Back-port of the patch deprecating delayed insert system variables.
------------------------------------------------------------
revno: 4189
committer: Nirbhay Choubey <nirbhay.choubey@oracle.com>
branch nick: B13598383-5.6
timestamp: Mon 2012-08-27 19:09:48 +0530
message:
  Bug#13598383 MAIN.MYSQLDUMP TEST FAILS ON RHEL 32 BIT
  
  Comments in mysqldump's output were not getting
  printed in right order. This happened as data from
  stdout (buffered) and stderr (unbuffered) were being
  displayed together.
  
  Fixed the test by redirecting the stderr output
  of the command to a separate file.
  
  Its a modification in the existing test. No separate
  test provided.
------------------------------------------------------------
revno: 4188
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: 5.6
timestamp: Mon 2012-08-27 14:47:23 +0200
message:
  Bug#14530242 CRASH / MEMORY CORRUPTION IN FILESORT_BUFFER::GET_RECORD_BUFFER WITH MYISAM
  
  In 5.6/trunk we have this patch:
  Bug#13340270: assertion table->sort.record_pointers == __null
  which free's a bit too much of the resources used by filesort()
------------------------------------------------------------
revno: 4187 [merge]
committer: Roy Lyseng <roy.lyseng@oracle.com>
branch nick: mysql-5.6-clone
timestamp: Mon 2012-08-27 13:23:37 +0200
message:
  Merge from mysql-5.6-14272788
    ------------------------------------------------------------
    revno: 4099.1.16
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Fri 2012-08-24 13:47:45 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      Patch #15 - Test cases for bug#14498914.
      
      This bug was fixed by patch #8. Without the patch, a subquery might
      erroneously be a candidate for semi-join conversion, and would have its
      predicate replaced with Item_int(1), but was not semi-join transformed,
      because added tables were calculated differently in the second loop of
      JOIN::flatten_subqueries(). This led to a subsequent crash in
      replace_subcondition(). As the criteria for semi-join transformation is
      now processed differently, this crash is no longer possible.
      
      This patch adds test cases for the bug.
      
      internal/mysql-test/suite/i_main/r/subquery.result
        Results for test cases for bug#14498914.
      
      internal/mysql-test/suite/i_main/t/subquery.test
        Test cases for bug#14498914.
    ------------------------------------------------------------
    revno: 4099.1.15
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Fri 2012-08-24 13:37:44 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      Patch #14 - Answering Oystein's review comments.
      
      sql/item.cc
      sql/item_cmpfunc.cc
      sql/sql_lex.h
      sql/sql_optimizer.h
      sql/sql_select.cc
      sql/sql_select.h
      sql/table.h
        Changed comments.
      
      sql/sql_optimizer.cc
        Removed a loop in JOIN::update_equalities_for_sjm(), made a new
        way of accessing the materialized temporary table of a semi-join.
        Changed comments.
    ------------------------------------------------------------
    revno: 4099.1.14
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Wed 2012-08-22 12:24:34 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      Patch #13 - Make JOIN_TAB::get_sj_strategy() truly inline.
      
      Make get_sj_strategy(), accomplished by moving definition of struct
      st_position above struct st_join_table in sql/sql_select.h.
      
      sql/sql_select.cc
        Deleted implementation of JOIN_TAB::get_sj_strategy().
      
      sql/sql_select.h
        Moved definition of struct st_position above struct st_join_table,
        implemented function JOIN_TAB::get_sj_strategy() inline.
    ------------------------------------------------------------
    revno: 4099.1.13
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Wed 2012-08-22 11:13:48 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      Patch #12 - Clean up "materialized" state in JOIN_TAB vs TABLE_LIST.
      
      The patch is based on assuming that a materializable derived table
      that is determined to be const (contains maximum one row), is always
      materialized by the optimizer before activating the executor.
      A new functiom materializable_is_const() is implemented for
      materializable tables that determines whether this is the case, and
      the join_materialize_derived() function check whether such table
      is const before actually materializing it.
      
      sql/records.h
        Deleted unused fields copy_field and copy_field_end from READ_RECORD.
      
      sql/sql_derived.cc
        Eliminate use of TABLE_LIST::materialized. Instead use
        TABLE_LIST::materializable_is_const() to determine whether to
        materialize a derived table that is const.
      
      sql/sql_executor.cc
        In join_materialize_derived(), assume that a derived table that is
        denoted "const" is already materialized.
      
      sql/sql_optimizer.cc
        In get_quick_record_count(), use estimated rowcount for a derived table
        that is const. (However, this code is never invoked by the test suite).
      
      sql/table.cc
        Implement the function TABLE_LIST::TABLE_LIST::materializable_is_const().
        It should be called only for a materializable function 
        (uses_materialization() is TRUE), and it uses the row count estimate
        to determine whether the table is assumed to be const.
        In TABLE_LIST::fetch_number_of_rows(), safely use the estimated row count
        also for a materializable table that is const.
      
      sql/table.h
        Define function materializable_is_const(), and remove the "materialized"
        field from struct TABLE_LIST.
    ------------------------------------------------------------
    revno: 4099.1.12
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Tue 2012-08-21 11:45:53 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      Patch #11 - Rename generated key fields in derived tables.
      
      Generated key fields in derived tables are currently named auto_keyN,
      where N is a sequentially generated number. This patch renames these
      fields to <auto_keyN>. This change is done for consistency, making
      all generated table and field names being enclosed in angular brackets.
      
      internal/mysql-test/suite/i_main/r/subquery.result
      mysql-test/r/derived.result
      mysql-test/r/func_analyse.result
      mysql-test/r/heap.result
      mysql-test/r/innodb_explain_json_non_select_all.result
      mysql-test/r/innodb_explain_json_non_select_none.result
      mysql-test/r/innodb_explain_non_select_all.result
      mysql-test/r/innodb_explain_non_select_none.result
      mysql-test/r/myisam_explain_json_non_select_all.result
      mysql-test/r/myisam_explain_json_non_select_none.result
      mysql-test/r/myisam_explain_non_select_all.result
      mysql-test/r/myisam_explain_non_select_none.result
      mysql-test/r/subquery_sj_all.result
      mysql-test/r/subquery_sj_all_bka.result
      mysql-test/r/subquery_sj_all_bka_nixbnl.result
      mysql-test/r/subquery_sj_all_bkaunique.result
      mysql-test/r/subquery_sj_dupsweed.result
      mysql-test/r/subquery_sj_dupsweed_bka.result
      mysql-test/r/subquery_sj_dupsweed_bka_nixbnl.result
      mysql-test/r/subquery_sj_dupsweed_bkaunique.result
      mysql-test/r/subquery_sj_firstmatch.result
      mysql-test/r/subquery_sj_firstmatch_bka.result
      mysql-test/r/subquery_sj_firstmatch_bka_nixbnl.result
      mysql-test/r/subquery_sj_firstmatch_bkaunique.result
      mysql-test/r/subquery_sj_loosescan.result
      mysql-test/r/subquery_sj_loosescan_bka.result
      mysql-test/r/subquery_sj_loosescan_bka_nixbnl.result
      mysql-test/r/subquery_sj_loosescan_bkaunique.result
      mysql-test/r/subquery_sj_mat.result
      mysql-test/r/subquery_sj_mat_bka.result
      mysql-test/r/subquery_sj_mat_bka_nixbnl.result
      mysql-test/r/subquery_sj_mat_bkaunique.result
      mysql-test/r/subquery_sj_mat_nosj.result
      mysql-test/r/subquery_sj_none.result
      mysql-test/r/subquery_sj_none_bka.result
      mysql-test/r/subquery_sj_none_bka_nixbnl.result
      mysql-test/r/subquery_sj_none_bkaunique.result
      mysql-test/suite/opt_trace/r/filesort_pq.result
      mysql-test/suite/opt_trace/r/general_no_prot_all.result
      mysql-test/suite/opt_trace/r/general_no_prot_none.result
      mysql-test/suite/opt_trace/r/general_ps_prot_all.result
      mysql-test/suite/opt_trace/r/general_ps_prot_none.result
      mysql-test/suite/opt_trace/r/subquery_no_prot.result
      mysql-test/suite/opt_trace/r/subquery_ps_prot.result
        Changed generated key field names for derived tables from
        auto_keyN to <auto_keyN>.
      
      sql/table.cc
        In TABLE_LIST::generate_keys(), add angular brackets to generated
        key field names for derived tables.
    ------------------------------------------------------------
    revno: 4099.1.11
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Tue 2012-08-21 09:53:01 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      Patch #10 - Limit IN queries that can be materialized to 16 selected exprs.
      
      Originally, materialization used a special implementation to set up
      lookup into the materialized table, which had no limit on the number
      of key parts, and hence the number of expressions selected from the
      subquery. After this patch, create_ref_for_key() is used for this purpose,
      and it has a limit on MAX_REF_PARTS key parts.
      
      The fix is to eliminate materialization as possible semi-join strategy
      when a large number of key parts is used.
      
      internal/mysql-test/suite/i_main/r/subquery.result
        Updated test results.
      
      internal/mysql-test/suite/i_main/t/subquery.test
        Test case with IN subquery predicate with 17 expressions.
      
      sql/sql_optimizer.cc
        If number of expressions selected from subquery / part of left-hand
        clause of IN subquery is greater than MAX_REF_PARTS (16), disable
        materialization as possible semi-join strategy.
      
      sql/sql_select.cc
        In create_ref_for_key(), assert that we do not attempt to use more than
        MAX_REF_PARTS key parts.
    ------------------------------------------------------------
    revno: 4099.1.10
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Mon 2012-08-20 12:33:40 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      Patch #9 - Move fields fropm Semijoin_mat_exec to Semijoin_mat_optimize.
      
      Some fields in the Semijoin_mat_exec class are actually optimizer related
      and should be moved into struct Semijoin_mat_optimize.
      The field mat_fields has been moved and the field emb_sj_nest has been
      deleted.
      
      sql/item_cmpfunc.cc
        Item::equality_substitution_transformer() accepts an argument that is
        a semi-join nest pointer instead of a Semijoin_mat_exec pointer.
      
      sql/sql_class.h
        Deleted fields mat_fields and emb_sj_nest from class Semijoin_mat_exec.
      
      sql/sql_optimizer.cc
        JOIN::update_equalities_for_sjm() must loop over select_lex->sj_nests
        instead of JOIN::sjm_exec_list.
        Local variable sjm is renamed to sjm_exec.
      
      sql/sql_select.cc
        In JOIN::get_best_combination(), assign sjm_exec pointer to embedding
        semi-join nest.
        Local variable sjm is renamed to sjm_exec.
        In JOIN::setup_materialized_table(), populate Semijoin_mat_optimize::
        mat_fields instead of Semijoin_mat_exec::mat_fields.
      
      sql/table.h
        Added field mat_fields to struct Semijoin_mat_optimize.
    ------------------------------------------------------------
    revno: 4099.1.9
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Mon 2012-08-20 09:13:10 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      Patch #8 - Fix problem with how subqueries are transformed to semi-join.
      
      There was a problem in how JOIN::flatten_subqueries() determined whether
      to transform a subquery to semi-join or not. When checking number of
      tables in query block after a transformation, the tables already added
      were not considered.
      
      This is now changed so that the first loop decides whether a subquery
      qualifies for transformation or not, and the second and third loops
      reuse the decision from the first loop. In addition, if a join nest
      with fewer tables follows one with more tables, which was not transformed,
      the smaller nest is now considered. In addition, the condition
      "< MAX_TABLES" was checked, but it should be "<= MAX_TABLES".
      
      sql/item_subselect.h
        Added the sj_chosen member variable that tells whether a subquery is
        chosen for semi-join transformation.
      
      sql/sql_optimizer.cc
        Changes to JOIN::flatten_subqueries(), see above.
    ------------------------------------------------------------
    revno: 4099.1.8
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Thu 2012-08-16 10:10:28 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      Patch #7 - Extend JOIN::all_tables array - ad hoc fix while waiting for
                 the complete removal of this array (in 5.6).
      
      sql/sql_optimizer.cc
        Extend JOIN::all_tables array with two elements when allocating it.
    ------------------------------------------------------------
    revno: 4099.1.7
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Wed 2012-08-15 13:42:18 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      Patch #6 - More use of Key_field constructor, developed by Guilhem.
      
      sql/sql_optimizer.cc
        Function add_key_field() is modified to use new Key_field constructor.
    ------------------------------------------------------------
    revno: 4099.1.6
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Wed 2012-08-15 10:58:35 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      Patch #5 - Missing real_item() in keyuse transformations
      
      With a field from a view in a keyuse object,
      JOIN::update_equalities_for_sjm() would not recognize the field as
      one needing transformation and would not replace it with the
      corresponding field from the materialized temporary table.
      
      internal/mysql-test/suite/i_main/r/subquery.result
        Added new test case results.
      
      internal/mysql-test/suite/i_main/t/subquery.test
        Added new test case.
      
      sql/sql_optimizer.cc
        Take real_item() of item in subquery expression list before
        comparing with item in keyuse.
    ------------------------------------------------------------
    revno: 4099.1.5
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Wed 2012-08-15 10:13:09 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      Patch #4 - Fix query block id for tables that are both a derived table
                 and an inner table in a semi-join materialization.
                 derived_select_number was used for both purposes - fix by
                 using two functions instead (JOIN_TAB::sjm_query_block_id()
                 and TABLE_LIST::query_block_id()).
      
      mysql-test/r/subquery_sj_all.result
      mysql-test/r/subquery_sj_all_bka.result
      mysql-test/r/subquery_sj_all_bka_nixbnl.result
      mysql-test/r/subquery_sj_all_bkaunique.result
      mysql-test/r/subquery_sj_mat.result
      mysql-test/r/subquery_sj_mat_bka.result
      mysql-test/r/subquery_sj_mat_bka_nixbnl.result
      mysql-test/r/subquery_sj_mat_bkaunique.result
        Fixed test results. Table entry now correctly shows MATERIALIZED, and
        query block id is correct (4 instead of 1).
      
      sql/opt_explain.cc
        Use of derived_select_number replaced with TABLE_LIST::query_block_id().
      
      sql/opt_explain_format.h
        Member variable derived_select_number renamed to query_block_id.
      
      sql/opt_explain_json.cc
        derived_select_number replaced with query_block_id.
      
      sql/sql_derived.cc
        Removed assignment to table->derived_select_number.
      
      sql/sql_select.cc
        Added function JOIN_TAB::sjm_query_block_id(), removed assignment to
        query_block_id for inner tables of materialized semi-join.
      
      sql/sql_select.h
        Added function JOIN_TAB::sjm_query_block_id().
      
      sql/table.cc
        Added function TABLE_LIST::query_block_id(), deleted derived_select_number.
      
      sql/table.h
        Added function TABLE_LIST::query_block_id(), deleted derived_select_number.
    ------------------------------------------------------------
    revno: 4099.1.4
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Mon 2012-08-13 23:48:43 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      Patch #3 - Update EXPLAIN based on Evgeny and Gleb`s work
      
      This work is needed to make EXPLAIN work properly with the new
      JOIN_TAB layout.
      
      internal/mysql-test/suite/i_main/r/subquery.result
      internal/mysql-test/suite/i_main/r/subquery_mat_cost_based.result
      mysql-test/r/derived.result
      mysql-test/r/explain_json_all.result
      mysql-test/r/group_by.result
      mysql-test/r/subquery_all.result
      mysql-test/r/subquery_all_bka.result
      mysql-test/r/subquery_all_bka_nixbnl.result
      mysql-test/r/subquery_mat.result
      mysql-test/r/subquery_mat_all.result
      mysql-test/r/subquery_sj_all.result
      mysql-test/r/subquery_sj_all_bka.result
      mysql-test/r/subquery_sj_all_bka_nixbnl.result
      mysql-test/r/subquery_sj_all_bkaunique.result
      mysql-test/r/subquery_sj_mat.result
      mysql-test/r/subquery_sj_mat_bka.result
      mysql-test/r/subquery_sj_mat_bka_nixbnl.result
      mysql-test/r/subquery_sj_mat_bkaunique.result
      mysql-test/r/subquery_sj_mat_nosj.result
        Test file changes:
        - distinct_key is replaced by "<auto_key>".
        - rows column: 0 sometimes replaced with NULL.
        - In explain JSON, semi-join materialization show
          "materialized_from_subquery" block.
      
      sql/opt_explain.cc
        Introduced Explain_join::explain_join_tab() that explains the inner
        part of a JOIN_TAB.
        Loop over primary_tables if explain is "hierarchical" otherwise loop
        over all tables in query block.
        Specify a "materialization" context or a "join tab" context based on
        whether we are explaining a materialized semi-join table or another
        type of table.
        If explain is "hierarchical", embed a "materialized_from_subquery"
        that explains how materialized semi-join table is generated.
      
      sql/opt_explain_json.cc
        Make explain of materialize_ctx more similar to a regular explain.
      
      sql/sql_tmp_table.cc
        In create_tmp_table(), replace the name used for a distinct index
        (when the distinct flag is provided) from "distinct_key" to "<auto_key>".
    ------------------------------------------------------------
    revno: 4099.1.3
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Mon 2012-08-13 22:13:27 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      Patch #2
       - address Guilhem's comments
       - added optimizer trace changes supplied by Guilhem.
      
      mysql-test/r/subquery_sj_all_bka_nixbnl.result
      mysql-test/r/subquery_sj_mat.result
      mysql-test/r/subquery_sj_mat_bka.result
      mysql-test/r/subquery_sj_mat_bka_nixbnl.result
      mysql-test/r/subquery_sj_mat_bkaunique.result
        EXPLAIN changes due to no longer checking that a keyuse->val->type()
        is Item::FIELD_ITEM within JOIN::update_equalities_for_sjm().
      
      mysql-test/suite/opt_trace/include/general.inc
        Modified optimizer trace settings for preservation of existing
        behaviour.
      
      mysql-test/suite/opt_trace/r/bugs_no_prot_all.result
      mysql-test/suite/opt_trace/r/bugs_ps_prot_all.result
      mysql-test/suite/opt_trace/r/general_no_prot_all.result
      mysql-test/suite/opt_trace/r/general_no_prot_none.result
      mysql-test/suite/opt_trace/r/general_ps_prot_all.result
      mysql-test/suite/opt_trace/r/general_ps_prot_none.result
        Changed optimizer trace results.
      
      sql/item_cmpfunc.cc
        Code simplifications and added comments.
        Check on whether an equality originates from a semi-join equality
        is slightly changed.
      
      sql/item_subselect.cc
        Replaced use of TABLE_LIST::materialized with JOIN_TAB::materialized.
      
      sql/opt_explain.cc
        Semijoin_mat_exec pointer is taken from JOIN_TAB, not TABLE_LIST.
        Use inner_table_index instead of old table_index.
      
      sql/opt_range.cc
        Reverted use of JOIN::plan_is_single_table().
      
      sql/sql_class.h
        In class Semijoin_mat_exec, added field mat_table_index, and renamed
        table_index to inner_table_index. inner_table_index is also made an
        absolute index (it used to be relative to mat_table_index).
        Member field_count is deleted.
        subq_exprs is converted from being a List to pointer to List.
      
      sql/sql_executor.cc
        In end_sj_materialize(), Semijoin_mat_exec is taken from JOIN_TAB.
        Some comment changes.
        join_materialize_table() is renamed to join_materialize_derived().
        join_materialize_semijoin() zeroes last->next_select and
        last->sj_mat_exec after use.
        inner_table_index is converted to an absolute index.
      
      sql/sql_executor.h
        join_materialize_table() is renamed to join_materialize_derived().
      
      sql/sql_join_buffer.cc
        Comment added inside JOIN_CACHE::calc_record_fields().
      
      sql/sql_optimizer.cc
        Logic of eliminate_item_equal() is rewritten according to suggestion
        from Guilhem.
        JOIN::update_keyuse() is incorporated into JOIN::update_equalities(),
        which is renamed to JOIN::update_equalities_for_sjm().
        Semijoin_mat_exec pointer is taken from JOIN_TAB instead of TABLE_LIST.
        JOIN::allocate_sj_mat_exec() is incorporated into
        JOIN::get_best_combination().
        Local struct KEY_FIELD is renamed to Key_field in association with
        introduction of constructor.
        create_keyuse_for_table() now uses add_key_part() when creating keyuse
        array.
      
      sql/sql_optimizer.h
        Removed member sjm_nests from class JOIN, it is calculated locally.
        update_equalities() is renamed to update_equalities_for_sjm().
        Updated comments.
        
      sql/sql_select.cc
        In clear_sj_tmp_tables(), added back clearing of materialized flag for
        semi-joined materialized tables.
        JOIN::destroy() now deletes all Semijoin_mat_exec objects.
        JOIN::get_best_combination(): Logic slightly re-arranged, creates the
        list of Semijoin_mat_exec objects.
        In JOIN::setup_materialized_table(), take Semijoin_mat_exec from
        JOIN_TAB, increment name allocation by 1 byte for null termination,
        use TABLE_LIST::init_one_table() to initialize object, modify "fanout"
        calculation for materialized temporary table, use
        POSITION::set_prefix_costs() to set cost.
        JOIN_TAB::cleanup(), earlier valgrind compensation deleted.
      
      sql/sql_select.h
        Added Semijoin_mat_exec pointer to class JOIN_TAB.
      
      sql/sql_show.cc
        Cosmetic changes.
    ------------------------------------------------------------
    revno: 4099.1.2
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Mon 2012-08-06 10:18:13 +0200
    message:
      Bug#14272788: Query with MaterializeScan and materialized subquery
                    returns too many rows
      
      The fix of this bug is based on rearranging JOIN_TAB elements for
      materialized semi-join nests and eliminating special optimizer and
      execution code for such nests.
      
      See separate design document for more explanation.
      
      internal/mysql-test/suite/i_main/r/subquery.result
        Added test case results for bug#14272788 and bug#14340367.
        Updated test results for materialized semi-join queries.
      
      internal/mysql-test/suite/i_main/r/subquery_mat_cost_based.result
        Updated test results for materialized semi-join queries.
      
      internal/mysql-test/suite/i_main/t/subquery.test
        Added test cases for bug#14272788 and bug#14340367.
      
      mysql-test/r/derived.result
        Updated test results for materialized semi-join queries.
      
      mysql-test/r/explain_json_all.result
        Updated test results for materialized semi-join queries.
      
      mysql-test/r/group_by.result
        Updated test results for materialized semi-join queries.
      
      mysql-test/r/subquery_mat_all.result
        Updated test results for materialized semi-join queries.
      
      mysql-test/r/subquery_sj_all.result
        Updated test results for materialized semi-join queries.
      
      mysql-test/r/subquery_sj_all_bka.result
        Updated test results for materialized semi-join queries.
      
      mysql-test/r/subquery_sj_all_bka_nixbnl.result
        Updated test results for materialized semi-join queries.
      
      mysql-test/r/subquery_sj_all_bkaunique.result
        Updated test results for materialized semi-join queries.
      
      mysql-test/r/subquery_sj_mat.result
        Updated test results for materialized semi-join queries.
      
      mysql-test/r/subquery_sj_mat_bka.result
        Updated test results for materialized semi-join queries.
      
      mysql-test/r/subquery_sj_mat_bka_nixbnl.result
        Updated test results for materialized semi-join queries.
      
      mysql-test/r/subquery_sj_mat_bkaunique.result
        Updated test results for materialized semi-join queries.
      
      sql/abstract_query_plan.cc
        Uses plan_is_const()
      
      sql/item.h
        Added argument functions for Item::compile()
      
      sql/item_cmpfunc.cc
        Added Item_equal::equality_substitution_transformer() and
        Item_func_eq::equality_substitution_transformer().
        Updated comments in Item_equal::get_subst_item().
      
      sql/item_cmpfunc.h
        Added a couple of new function headers.
      
      sql/item_subselect.cc
        Modified to use "primary_tables" instead of "tables".
      
      sql/opt_explain.cc
        Explain_join::shallow_explain() has been updated to reflect the new
        layout of JOIN_TAB elements for materialized semi-join plans.
        Explain_join::explain_table_name() now tests the "derived" pointer to
        check whether a table is (materialized) derived.
        Explain_join::explain_select_type() has been added to set the
        "MATERIALIZED" select_type.
        Explain_join::explain_id() has been added to set original query block
        id for a materialized semi-join table.
      
      sql/opt_explain_json.cc
        A DBUG_ASSERT was deleted.
      
      sql/opt_range.cc
        Uses plan_is_single_table() and primary_tables.
      
      sql/sql_class.h
        Class Semijoin_mat_exec:
          Added members emb_sj_nest, field_count, table_index and mat_fields.
          table_cols is renamed as subq_exprs.
          Deleted members tab_ref, in_equality, join_cond and copy_field.
          Member materialized is replaced with JOIN_TAB::materialized.
      
      sql/sql_delete.cc
        Modified to use "primary_tables" instead of "tables".
      
      sql/sql_executor.cc
        Functions join_read_key2(), join_read_record_no_init(),
        rr_sequential_and_unpack() and sub_select_sjm() are deleted.
        Function join_materialize_semijoin() is added.
      
      sql/sql_executor.h
        Function prototypes are removed.
      
      sql/sql_join_buffer.cc
        JOIN_CACHE::calc_record_fields() has a different way to locate first
        buffered table when materializing semi-joined tables.
      
      sql/sql_lex.cc
        Added new select_type: "MATERIALIZED".
      
      sql/sql_lex.h
        Added new select_type: "MATERIALIZED".
      
      sql/sql_optimizer.cc
        eliminate_item_equal() simplified according to new design.
        Function JOIN::update_keyuse() has been added.
        Function JOIN::update_equalities() has been added.
        Function create_keyuse_for_table() has been added.
        Function make_cond_after_sjm() has been deleted.
        In semijoin_types_allow_materialization(), MaterializeScan is
        allowed even when selected expressions are not fields.
        In make_join_select(), special handling of materialization has been
        eliminated.
        Using "primary_tables" several places instead of "tables".
        Using new functions plan_in_const() and plan_is_single_table().
        Several changes due to new layout of JOIN_TAB array.
      
      sql/sql_optimizer.h
        Added fields primary_tables and sjm_nests to class JOIN.
        Deleted field outer_tables as it was redundant.
        Added functions plan_is_const() and plan_is_single_table() to class JOIN.
      
      sql/sql_planner.cc
        No longer trashes the sjm member of sj_nest, as it is needed later
        in optimization.
      
      sql/sql_resolver.cc
        In JOIN::prepare(), initialize field JOIN::primary_tables.
      
      sql/sql_select.cc
        Function setup_sj_materialization() is replaced with
        setup_materialized_table().
        In JOIN::get_best_combination(), number of JOIN_TAB elements is
        calculated differently and layout is different.
        setup_materialized_table() is called as materialized semi-join nests
        are recognized. New adjustments to the optimized plan are made in
        JOIN::update_keyuse() and JOIN::update_equalities().
        In JOIN::set_semijoin_info(), TABLE::derived_select_number is updated
        to original query block id for members of materialized semi-join nests.
        Functions is_cond_sj_in_equality(), remove_sj_conds() and
        create_subquery_equalities() are deleted.
        Function JOIN_TAB::get_sj_strategy() is simplified.
        Function JOIN::cleanup() has been modified for new JOIN_TAB setup.
        Using "primary_tables" several places instead of "tables".
        Several changes due to new layout of JOIN_TAB array.
      
      sql/sql_select.h
        Added members "position" and "materialized" in struct st_join_table.
      
      sql/sql_test.cc
        Added test for a NULL table pointer.
      
      sql/table.cc
        TABLE::init() sets derived_select_number to zero.
      
      sql/table.h
        Added field "query_block_id" to save id from original query block
        when a semi-join nest is formed.
    ------------------------------------------------------------
    revno: 4099.1.1 [merge]
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-14272788
    timestamp: Mon 2012-08-06 09:36:48 +0200
    message:
      Merge from 5.6
------------------------------------------------------------
revno: 4186
committer: Hemant Kumar <hemant.hk.kumar@oracle.com>
branch nick: mysql-5.6
timestamp: Mon 2012-08-27 16:35:24 +0530
message:
  Non functional changes in collection-
  -Made default.push to run with "debug-server" option
  -Removed mysql-5.6.push
------------------------------------------------------------
revno: 4185 [merge]
committer: Gopal Shankar <gopal.shankar@oracle.com>
branch nick: sf_mysql-5.6
timestamp: Mon 2012-08-27 16:23:54 +0530
message:
  Merging revision 3955 from mysql-5.5 for Bug#14364558
    ------------------------------------------------------------
    revno: 2875.392.70
    committer: Gopal Shankar <gopal.shankar@oracle.com>
    branch nick: sf_mysql-5.5
    timestamp: Mon 2012-08-27 16:21:20 +0530
    message:
      Bug#14364558
      ASSERT `TABLE_LIST->PRELOCKING_PLACEHOLDER == FALSE' 
             FAILED IN CHECK_LOCK_AND_ST
      
      Moving the test case from i_main.lock.test to
      i_main.lock_debug_sync.test. We cannot use lock.test
      as the new test needs to run with DEBUG_SYNC.
------------------------------------------------------------
revno: 4184 [merge]
committer: Aditya A <aditya.a@oracle.com>
branch nick: mysql-5.6
timestamp: Mon 2012-08-27 15:53:48 +0530
message:
  [NULL merge revsion no 3954 from 5.5 to 5.6]
    ------------------------------------------------------------
    revno: 2875.392.69
    committer: Aditya A <aditya.a@oracle.com>
    branch nick: mysql-5.5
    timestamp: Mon 2012-08-27 15:42:11 +0530
    message:
      Bug#14145950 AUTO_INCREMENT ON DOUBLE WILL FAIL ON WINDOWS
      
      Backport from mysql-5.6 the fix
      (revision-id sunny.bains@oracle.com-20120315045831-20rgfa4cozxmz7kz)
      
        Bug#13839886 - CRASH IN INNOBASE_NEXT_AUTOINC
        
        The assertion introduce in the fix for Bug#13817703 
        is too strong, a negative  number can be greater 
        than the column max value, when the column value is
        a negative number.
        
        rb://978 Approved by Jimmy Yang.
      
      rb:1236 approved by Marko Makela
------------------------------------------------------------
revno: 4183 [merge]
committer: Aditya A <aditya.a@oracle.com>
branch nick: mysql-5.6
timestamp: Mon 2012-08-27 14:46:08 +0530
message:
  Bug#14145950 AUTO_INCREMENT ON DOUBLE WILL FAIL ON WINDOWS
  
  Backport from mysql-5.6 the fix
  (revision-id sunny.bains@oracle.com-20120315045831-20rgfa4cozxmz7kz)
  
    Bug#13839886 - CRASH IN INNOBASE_NEXT_AUTOINC
    
    The assertion introduce in the fix for Bug#13817703 
    is too strong, a negative  number can be greater 
    than the column max value, when the column value is
    a negative number.
    
    rb://978 Approved by Jimmy Yang.
  
  rb:1236 approved by Marko Makela
    ------------------------------------------------------------
    revno: 2875.403.1
    committer: Aditya A <aditya.a@oracle.com>
    branch nick: mysql-5.5
    timestamp: Mon 2012-08-27 14:30:18 +0530
    message:
      Bug#14145950 AUTO_INCREMENT ON DOUBLE WILL FAIL ON WINDOWS
      
      Backport from mysql-5.6 the fix
      (revision-id sunny.bains@oracle.com-20120315045831-20rgfa4cozxmz7kz)
      
        Bug#13839886 - CRASH IN INNOBASE_NEXT_AUTOINC
        
        The assertion introduce in the fix for Bug#13817703 
        is too strong, a negative  number can be greater 
        than the column max value, when the column value is
        a negative number.
        
        rb://978 Approved by Jimmy Yang.
      
      rb:1236 approved by Marko Makela
------------------------------------------------------------
revno: 4182
committer: Andrei Elkin <andrei.elkin@oracle.com>
branch nick: mysql-5.6
timestamp: Mon 2012-08-27 10:45:05 +0300
message:
  Bug#13897025 - fixing post-push valgrind issue with rpl_relayrotate.
------------------------------------------------------------
revno: 4181
committer: Norvald H. Ryeng <norvald.ryeng@oracle.com>
branch nick: mysql-5.6-14501403
timestamp: Mon 2012-08-27 09:18:18 +0200
message:
  Bug#14501403 CRASH IN ITEM_CACHE_STR::SAVE_IN_FIELD WITH NATURAL
  JOINS, SET, VARBINARY
  
  Regression introduced by fix for bug #13013970.
  
  Problem: Item_cache_str::save_in_field() dereferences a null pointer
  if the cached value is NULL.
  
  When the cached value is NULL, null_value is set to true and value is
  set to a null pointer. Item_cache_str::save_in_field() tries to find
  the length of the String value points to without checking for NULLs
  first. This leads to dereferencing a null pointer.
  
  Fix: Check that the value pointer is not null before trying to find
  the length of the String it points to.
------------------------------------------------------------
revno: 4180
committer: Andrei Elkin <andrei.elkin@oracle.com>
branch nick: mysql-5.6
timestamp: Mon 2012-08-27 10:00:53 +0300
message:
  Bug#13897025 - fixing post-push gcov compilation issue.
------------------------------------------------------------
revno: 4179
committer: Rohit Kalhans <rohit.kalhans@oracle.com>
branch nick: mysql-5.6_b14457883
timestamp: Sun 2012-08-26 00:50:46 +0530
message:
  BUG#14457883: followup patch for fixing the test case.
  The test binlog_gtid_without_binlog should not run on the
  embedded server as on embedded server the function 
  SQL_THREAD_WAIT_AFTER_GTIDS() always returns '0' if no tuples
  are retieved. This causes a result content mismatch.
------------------------------------------------------------
revno: 4178 [merge]
committer: Hery Ramilison <hery.ramilison@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-24 20:03:23 +0200
message:
  Empty version change upmerge
    ------------------------------------------------------------
    revno: 2875.392.68
    author: hery.ramilison@oracle.com
    committer: Hery Ramilison <hery.ramilison@oracle.com>
    branch nick: mysql-5.5
    timestamp: Fri 2012-08-24 19:49:47 +0200
    message:
      Raise version number after cloning 5.5.28
------------------------------------------------------------
revno: 4177
committer: Andrei Elkin <andrei.elkin@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-24 19:11:06 +0300
message:
  Bug#13897025: post-pushes fixes to satisfy gcov build.
------------------------------------------------------------
revno: 4176
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-24 22:35:07 +0800
message:
  Fix Bug #14527245 - ASSERT MUTEX_OWN(&DICT_SYS->MUTEX) 
  DICT_TABLE_MOVE_FROM_LRU_TO_NON_LRU FTS
  
  rb://1243 approved by Sunny Bains
------------------------------------------------------------
revno: 4175
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-5.6-bug14530380
timestamp: Fri 2012-08-24 15:39:15 +0200
message:
  Bug#14530380 SERVER CRASH WHILE DROPPING A FOREIGN KEY
  
  The problem was that the server would crash inside InnoDB if
  ALTER TABLE ... DROP FOREIGN KEY was used without naming the
  fk to be dropped.
  
  This patch fixes the problem by changing the grammar so that
  specifying fk name is required - similar to what is already
  done for ALTER TABLE ... DROP KEY.
------------------------------------------------------------
revno: 4174 [merge]
committer: Andrei Elkin <andrei.elkin@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-24 16:21:51 +0300
message:
  merge from 5.6 repo
    ------------------------------------------------------------
    revno: 4172.1.1 [merge]
    committer: Martin Hansson <martin.hansson@oracle.com>
    branch nick: mysql-5.6-push3
    timestamp: Fri 2012-08-24 14:50:37 +0200
    message:
      Bug#14498355: merge.
        ------------------------------------------------------------
        revno: 4171.1.1 [merge]
        committer: Martin Hansson <martin.hansson@oracle.com>
        branch nick: mysql-5.6-push2
        timestamp: Fri 2012-08-24 14:40:58 +0200
        message:
          Bug#14498355: merge.
            ------------------------------------------------------------
            revno: 4167.1.1 [merge]
            committer: Martin Hansson <martin.hansson@oracle.com>
            branch nick: mysql-5.6-push
            timestamp: Fri 2012-08-24 14:32:55 +0200
            message:
              Bug#14498355: merge.
                ------------------------------------------------------------
                revno: 2875.392.67 [merge]
                tags: clone-5.5.28-build
                committer: Martin Hansson <martin.hansson@oracle.com>
                branch nick: mysql-5.5-push
                timestamp: Fri 2012-08-24 11:56:14 +0200
                message:
                  Bug#14498355: Merge
------------------------------------------------------------
revno: 4173
committer: Andrei Elkin <andrei.elkin@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-24 16:00:09 +0300
message:
  Bug#13897025 - SLAVE_PARALLEL_WORKERS DEGRADES REPLICATION PERFORMANCE
  
  The reason of degradation appeared to be two-fold.
  The load of the test report contained FK-related databases with rather
  aggressive load to them forcing MTS frequently switching to sequential
  execution which is somewhat expensive.
  The other reason turns out to be a mistake in the source code
  in resetting a multiplier to the Coordinator nap. The multiplier is computed 
  as a number of excessive events counting from a certain overrun level
  of the Worker queue. It was not reset to zero that made the multiplier grow
  over time which manifested in the observed slave execution slowdown.
  
  Fixed with correcting the nap factor computing.
  An assert is deployed to prove the correct resetting in the case of one
  Worker.
  In order to hunt over possible performance reports more statistics is made
  to printed into error log with --log-warnings=2.
------------------------------------------------------------
revno: 4172
committer: Inaam Rana <inaam.rana@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-24 08:39:32 -0400
message:
  Add missing tests for WL#6344 which we mistakenly not pushed with
  original patch. inaam.rana@oracle.com-20120823123922-b09n1ekan99183pg
------------------------------------------------------------
revno: 4171
committer: Rohit Kalhans <rohit.kalhans@oracle.com>
branch nick: mysql-5.6_b14457883
timestamp: Fri 2012-08-24 17:43:03 +0530
message:
  BUG#14457883: SANITARY CHECKS REQUIRED IN
  SQL_THREAD_WAIT_AFTER_GTIDS() WHEN USED
  WITHOUT REPLICATION AND BINLOG
  
  Problem: The implementation of SQL function
  sql_thread_wait_after_gtids() doesnot have proper
  sanitary check for the condition in which binlogging
  is disabled.
  
  Background: There is no sanity check if replication
  has not been setup.
  
  Fix: We implement a sanity check to make
  sql_thread_wait_after_gtids() return 'NULL' in case
  replication has not been setup. 
------------------------------------------------------------
revno: 4170
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-24 15:01:01 +0300
message:
  Let innodb_fts_large_records.test run without --big-test.
  It is a quick test (about 3 seconds), and it has caught regressions during
  development.
------------------------------------------------------------
revno: 4169
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-24 14:58:07 +0300
message:
  Cleanup for Bug#14219624 - ALTER TABLE...ADD COL AUTO_INCREMENT DOES NOT OBEY
  AUTO_INCREMENT_OFFSET
  
  There was a slight error in the original fix, which lead to an
  assertion failure while testing rb:1230. Sunny proposed this fix.
------------------------------------------------------------
revno: 4168
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-24 14:56:19 +0300
message:
  Bug#14488218 ALTER TABLE trouble with FULLTEXT INDEX
  
  In an ALTER TABLE that rebuilds a table, and in particular, ADD
  COLUMN, DROP COLUMN, there were some assertion failures related to
  fulltext indexes.
  
  innobase_create_key_defs(): Always initialize n_fts_add (make it an
  output-only parameter).
  
  prepare_inplace_alter_table_dict(): Remove the parameter
  num_fts_index. We cannot calculate it until we know if the table is to
  be rebuilt. The variable is supposed to count the number of fulltext
  indexes that will be created. In a rebuild, all indexes will be
  re-created. Otherwise, only added fulltext indexes will be
  created. Add a debug assertion and error handling to ensure that
  InnoDB never tries to execute a locking ALTER while MySQL is asking
  for non-locking (online) ALTER.
  
  ha_innobase::prepare_inplace_alter_table(): Defer the check for
  num_fts_index>1 until prepare_inplace_alter_table_dict().
  
  ha_innobase::check_if_supported_inplace_alter(): Refuse to ADD PRIMARY
  KEY online if there would be fulltext indexes in the new table, or if
  the table contains a hidden FTS_DOC_ID column (there used to be
  fulltext indexes).
  
  rb:1228 approved by Jimmy Yang
------------------------------------------------------------
revno: 4167
committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-24 17:02:06 +0530
message:
  Fixed the problem of sporadic failure and checked the results in mysql-trunk
  no issues are found.
------------------------------------------------------------
revno: 4166 [merge]
committer: Martin Hansson <martin.hansson@oracle.com>
branch nick: mysql-5.6-push
timestamp: Fri 2012-08-24 11:53:48 +0200
message:
  Bug#14498355: Merge
    ------------------------------------------------------------
    revno: 4162.1.1 [merge]
    committer: Martin Hansson <martin.hansson@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2012-08-24 10:38:58 +0200
    message:
      Bug#14498355: Merge
        ------------------------------------------------------------
        revno: 2875.402.1
        committer: Martin Hansson <martin.hansson@oracle.com>
        branch nick: mysql-5.5
        timestamp: Fri 2012-08-24 10:17:08 +0200
        message:
          Bug#14498355: DEPRECATION WARNINGS SHOULD NOT CONTAIN MYSQL VERSION
          NUMBERS
          
          If a system variable was declared as deprecated without mention of an
          alternative, the message would look funny, e.g. for @@delayed_insert_limit:
          
          Warning 1287 '@@delayed_insert_limit' is deprecated and
          will be removed in MySQL .
          
          The message was meant to display the version number, but it's not
          possible to give one when declaring a system variable.
          
          The fix does two things:
          
          1) The definition of the message
          ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT is changed so that it does
          not display a version number. I.e. in English the message now reads:
          
          Warning 1287 The syntax '@@delayed_insert_limit' is deprecated and
          will be removed in a future version.
          
          2) The message ER_WARN_DEPRECATED_SYNTAX_WITH_VER is discontinued in
          favor of ER_WARN_DEPRECATED_SYNTAX for system variables. This change
          was already done in versions 5.6 and above as part of wl#5265. This
          part is simply back-ported from the worklog.
------------------------------------------------------------
revno: 4165 [merge]
committer: Ashish Agarwal<ashish.y.agarwal@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-24 15:00:25 +0530
message:
  Bug#14363985: Merge from mysql-5.5 to mysql-5.6
    ------------------------------------------------------------
    revno: 2875.392.66
    committer: Ashish Agarwal<ashish.y.agarwal@oracle.com>
    branch nick: bug14363985
    timestamp: Fri 2012-08-24 14:55:47 +0530
    message:
      Bug#14363985: MYSQLD CRASHED WHEN DISABL AND
                    ENABLE AUDI PLUGIN WHEN DDL
                    OPERATION HAPPENING
      
      PROBLEM: While unloading the plugin, state is
               not checked before it is to be reaped.
               This can lead to simultaneous free of
               plugin memory by more than one thread.
               Multiple deallocation leads to server
               crash. In the present bug two threads
               deallocate the alog_log plugin.
      
      SOLUTION: A check is added to ensure that only
                one thread is unloading the plugin.
      
      NOTE: No mtr test is added as it requires
            multiple threads to access critical
            section. debug_sync cannot be used in
            the current senario because we dont
            have access to thread pointer in
            some of the plugin functions. IMHO no
            test case in the current time frame.
------------------------------------------------------------
revno: 4164
committer: Jorgen Loland <jorgen.loland@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-08-24 10:48:45 +0200
message:
  BUG#14497598: INCORRECT RANGE CONSTRUCTION FOR COMPLEX CONDITION
  
  Range optimizer: It is possible that a SEL_TREE contains both
  a) simple range predicates (in tree->keys[]) and
  b) index merge range predicates (in tree->merges)
  
  If a tree has both, they represent equally *valid* range
  predicate alternatives; both will return all relevant rows 
  from the table but one may return more unnecessary rows than
  the other. tree_or() was not up for the task of merging 
  such complex trees. The fix is to remove the index 
  merge predicates (if we have both types) before OR'ing the 
  trees. 
  
  For future reference: It is possible to tree_or such 
  SEL_TREEs, it's just not prioritized ATM.
------------------------------------------------------------
revno: 4163 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6-cleanup
timestamp: Fri 2012-08-24 10:26:46 +0200
message:
  NULL MERGE mysql-5.5 --> mysql-5.6
    ------------------------------------------------------------
    revno: 2875.392.65
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-5.5-cleanup
    timestamp: Fri 2012-08-24 10:01:59 +0200
    message:
      Bug#13417440 : 63340: ARCHIVE FILE IO NOT INSTRUMENTED
      
      WARNING
      
      This patch is for mysql-5.5 only,
      to be null-merged to mysql-5.6 and mysql-trunk.
      
      This is a partial rollback of the file io instrumentation,
      removing the instrumentation for mysql_file_stat in the archive engine.
      
      See the bug comments for details.
------------------------------------------------------------
revno: 4162
committer: Alexander Nozdrin <alexander.nozdrin@oracle.com>
branch nick: 5.6
timestamp: Fri 2012-08-24 11:29:02 +0400
message:
  Patch for Bug#14483430 (RECONSIDER MYSQL 5.6.6 BIND-ADDRESS BEHAVIOUR
  WHEN CONFIGURED AS DEFAULT *).
  
  The bug was introduced by WL#6301 (Change default value for the 'bind-address' option).
  
  The user visible problem was that the server didn't start with the default value
  of bind-address, which is '*'. The star means that the server should choose
  '::' or '0.0.0.0' depending on whether IPv6 is available on the box or not.
  
  The IPv6 detection was implemented by calling getaddrinfo() for the IPv6-address.
  It turned out, it is not enough -- getaddrinfo() might successfully return, but later
  OS failed to create an IPv6-socket. This problem is platform dependent
  (reproduced on CentOS 5.2).
  
  The fix is to make the check more strict -- try to create a dummy IPv6-socket
  after getaddrinfo() succeeds.
  
  No test case for the bug since it is platform specific.
------------------------------------------------------------
revno: 4161 [merge]
committer: Gopal Shankar <gopal.shankar@oracle.com>
branch nick: sf_mysql-5.6
timestamp: Fri 2012-08-24 09:56:40 +0530
message:
  Merge for Bug#14364558 from mysql-5.5
    ------------------------------------------------------------
    revno: 2875.392.64
    committer: Gopal Shankar <gopal.shankar@oracle.com>
    branch nick: sf_mysql-5.5
    timestamp: Fri 2012-08-24 09:51:42 +0530
    message:
      Bug#14364558 ASSERT `TABLE_LIST->PRELOCKING_PLACEHOLDER==FALSE'
                   FAILED IN CHECK_LOCK_AND_ST
      
      Problem:
      --------
      lock_tables() is supposed to invoke check_lock_and_start_stmt()
      for TABLE_LIST which are directly used by top level statement.
      TABLE_LIST->prelocking_placeholder is set only for TABLE_LIST
      which are used indirectly by stored programs invoked by top
      level statement. Hence check_lock_and_start_stmt() should have
      TABLE_LIST->prelocking_placeholder==false always, but it is
      observed that this assert fails.
      
      The failure is found during RQG test rqg_signal_resignal.
      
      Analysis:
      ---------
      open_tables() invokes open_and_process_routines() where it
      finds all the TABLE_LIST that belong to the routine and
      adds it to thd->lex->query_tables. During this process if
      the open_and_process_routines() fail for some reason,
      we are supposed to chop-off all the TABLE_LIST found during
      calls to open_and_process_routines(). But, in practice this
      is not happening.
      
      thd->lex->query_tables_own_last is supposed to point to a
      node in thd->lex->query_tables, which would be a first
      TABLE_LIST used indirectly by stored programs invoked by
      top level statement. This is found to be not-set correctly
      when we plan to chop-off TABLE_LIST's, when
      open_and_process_routines() failed.
      
      close_tables_for_reopen() does chop-off all the TABLE_LIST
      added after thd->lex->query_table_own_last. This is invoked
      upon error in open_and_process_routines(). This call would
      not work as expected as thd->lex->query_tables_own_last
      is not set, or is not set to correctly.
      
      Further, when open_tables() restarts the process of finding
      TABLE_LIST belonging to stored programs, and as the
      thd->lex->query_tables_own_last points to in-correct node,
      there is possibility of new iteration setting the
      thd->lex->query_tables_own_last past some old nodes that
      belong to stored programs, added earlier and not removed.
      Later when open_tables() completes, lock_tables() ends up
      invoking check_lock_and_start_stmt() for TABLE_LIST which
      belong to stored programs, which is not expected behavior
      and hence we hit the assert
      TABLE_LIST->prelocking_placeholder==false.
      
      Due to above behavior, if a user application tries to
      execute a SQL statement which invokes some stored function
      and if the lock grant on stored function fails due to a
      deadlock, then mysqld crashes.
      
      Fix:
      ----
      open_tables() remembers save_query_tables_last which points
      to thd-lex->query_tables_last before calls to
      open_and_process_routines(). If there is no known
      thd->lex->query_tables_own_last set, we are now setting
      thd->lex->query_tables_own_last to save_query_tables_last.
      This will make sure that the call to close_tables_for_reopen()
      will chop-off the list correctly, in other words we now
      remove all the nodes added to thd->lex->query_tables, by
      previous calls to open_and_process_routines().
      
      Further, it is found that the problem exists starting
      from 5.5, due to a code refactoring effort related to
      open_tables(). Hence, the fix will be pushed in 5.5, 5.6
      and trunk.
------------------------------------------------------------
revno: 4160 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6-bug13984150
timestamp: Thu 2012-08-23 23:21:43 +0200
message:
  Local merge
    ------------------------------------------------------------
    revno: 4158.1.2
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-merge
    timestamp: Thu 2012-08-23 16:57:24 +0200
    message:
      slightly different explain
    ------------------------------------------------------------
    revno: 4158.1.1 [merge]
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-merge
    timestamp: Thu 2012-08-23 16:51:37 +0200
    message:
      merge 5.5 => 5.6
        ------------------------------------------------------------
        revno: 2875.392.63
        committer: Tor Didriksen <tor.didriksen@oracle.com>
        branch nick: 5.5-bug65948
        timestamp: Thu 2012-08-23 16:29:41 +0200
        message:
          Bug#14463247 ORDER BY SUBQUERY REFERENCING OUTER ALIAS FAILS
          
          Documentation for class Item_outer_ref was wrong:
          (*ref) may point to Item_field as well
          (see e.g. Item_outer_ref::fix_fields)
          
          So this casting in get_store_key() was wrong:
          (*(Item_ref**)((Item_ref*)keyuse->val)->ref)->ref_type()
------------------------------------------------------------
revno: 4159
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6-bug13984150
timestamp: Thu 2012-08-23 17:50:24 +0200
message:
  Bug#13984150 - PERFSCHEMA.PFS_UPGRADE TEST FAILS WITH "UPGRADE FAILED"
  MAINLY IN GCOV
  
  Before this fix, the test pfs_upgrade would test different upgrade cases
  involving:
  - a table
  - a view
  - a stored procedure
  - a stored function
  - an event
  in the same script, which resulted in 5 execution of mysql_upgrade.
  
  The problem was that, when doing special builds involving time consuming
  instrumentation (valgrind builds, gcov builds), and given that mysql_upgrade
  is an long operation, the test script did time out and fail.
  
  The fix is to split this long test in smaller peices,
  to avoid time outs and improve manageability.
  
  This fix is a test script fix only, no server code was changed.
------------------------------------------------------------
revno: 4158
committer: Inaam Rana <inaam.rana@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-08-23 08:39:22 -0400
message:
  WL#6344 Make compression level and logging of compressed pages configurable
  
  Backport from trunk:inaam.rana@oracle.com-20120726094441-lrqs0hi6dy629713
  
  The following test cases which were part of the original push to trunk
  but were not directly related to the WL are not backported in this
  push and will be pushed separately.
  
  mysql-test/suite/innodb/t/innodb_crash_recov_log_compressed_after_commit_0.test
  mysql-test/suite/innodb/t/innodb_crash_recov_log_compressed_after_commit_1.test
  mysql-test/suite/innodb/t/innodb_crash_recov_log_compressed_before_commit_0.test
  mysql-test/suite/innodb/t/innodb_crash_recov_log_compressed_before_commit_1.test
------------------------------------------------------------
revno: 4157
committer: Inaam Rana <inaam.rana@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-08-23 07:11:08 -0400
message:
  WL#6345 Dynamic padding to reduce compression failure rate
  
  Backport from trunk: inaam.rana@oracle.com-20120718170534-2hjbgq5leo7zx0xk
------------------------------------------------------------
revno: 4156
committer: Nuno Carvalho <nuno.carvalho@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-08-23 11:52:43 +0100
message:
  BUG#14116526: RPL.RPL_GTID_SQL_UNTIL_BEFORE_AFTER FAILS WITH RESULT LENGTH MISMATCH ON TRUNK.
  
  Changed rpl_gtid_sql_until_before_after test case to use assertions
  instead of result listing, this way if test fails all servers' state
  will be logged.
  Removed unneeded disable_query_log command.
------------------------------------------------------------
revno: 4155 [merge]
committer: Georgi Kodinov <Georgi.Kodinov@Oracle.com>
branch nick: B14399795-5.6
timestamp: Thu 2012-08-23 12:39:24 +0300
message:
  merge
    ------------------------------------------------------------
    revno: 2875.392.62
    committer: Georgi Kodinov <Georgi.Kodinov@Oracle.com>
    branch nick: mysql-5.5-commercial
    timestamp: Fri 2012-08-17 18:02:44 +0300
    message:
      Bug #14399795 : ISSUES RELATED TO SETTING AUDIT_LOG_STRATEGY 
      DURING SERVER STARTUP
      
      The options parser now correctly checks for ambiguous prefixes in 
      enumerated variables and emits an error when the value supplied is
      ambiguous.
      
      No test added since mysql-test-run.pl can't handle server startup 
      failures as an expected state.
------------------------------------------------------------
revno: 4154
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: 5.6
timestamp: Thu 2012-08-23 11:18:04 +0200
message:
  Bug#12762891 SSL.CMAKE FILE IS BROKEN WHEN USING CUSTOM OPENSSL BUILD
  Bug#14167227 CMAKE SHOULD REJECT -DWITH_SSL=SYSTEM IF OPENSSL IS OLDER THAN 1.0.0
  
  Added functionality to use custom installation of openssl.
  # - a custom installation of openssl can be used like this
  #     - cmake -DCMAKE_PREFIX_PATH=</path/to/custom/openssl> -DWITH_SSL="system"
  #   or
  #     - cmake -DWITH_SSL=</path/to/custom/openssl>
------------------------------------------------------------
revno: 4153
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-5.6-test
timestamp: Thu 2012-08-23 10:21:03 +0200
message:
  Bug#13945257 NEW COMPILATION ERRORS/WARNINGS WITH XCODE 4.3.2
  
  Follow-up patch: Fix 3 additional warnings reported by Clang 4.0 / XCode 4.4.1
------------------------------------------------------------
revno: 4152
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-08-23 11:16:42 +0300
message:
  Bug#14529475 INNODB.INNODB_BUG13867871 FAILS DUE TO QUERY REAP SUCCEEDED
  
  Allow the nondeterminism for now. This needs to be investigated later.
------------------------------------------------------------
revno: 4151
committer: Olav Sandstaa <olav.sandstaa@oracle.com>
branch nick: loose-scan-perf-5.6
timestamp: Thu 2012-08-23 09:45:33 +0200
message:
  Fix for Bug#11757108 CHANGE IN EXECUTION PLAN FOR COUNT_DISTINCT_GROUP_ON_KEY
                       CAUSES PEFORMANCE REGRESSION
  
  The cause for the performance regression is that the access strategy for the
  GROUP BY query is changed form using "index scan" in mysql-5.1 to use "loose
  index scan" in mysql-5.5. The index used for group by is unique and thus each
  "loose scan" group will only contain one record. Since loose scan needs to
  re-position on each "loose scan" group this query will do a re-position for
  each index entry. Compared to just reading the next index entry as a normal
  index scan does, the use of loose scan for this query becomes more expensive.
  
  The cause for selecting to use loose scan for this query is that in the current
  code when the size of the "loose scan" group is one, the formula for
  calculting the cost estimates becomes almost identical to the cost of using
  normal index scan. Differences in use of integer versus floating point aritmetic
  can cause one or the other access strategy to be selected.
  
  The main issue with the formula for estimating the cost of using loose scan is
  that it does not take into account that it is more costly to do a re-position
  for each "loose scan" group compared to just reading the next index entry.
  Both index scan and loose scan estimates the cpu cost as:
  
    "number of entries needed too read/scan" * ROW_EVALUATE_COST
  
  The results from testing with the query in this bug indicates that the real
  cost for doing re-position four to eight times higher than just reading the
  next index entry. Thus, the cpu cost estimate for loose scan should be increased.
  To account for the extra work to re-position in the index we increase the
  cost for loose index scan to include the cost of navigating the index. 
  This is modelled as a function of the height of the b-tree:
  
    navigation cost= ceil(log(records in table)/log(indexes per block))
                   * ROWID_COMPARE_COST;
  
  This will avoid loose index scan being used for indexes where the "loose scan" 
  group contains very few index entries.
------------------------------------------------------------
revno: 4150
committer: Norvald H. Ryeng <norvald.ryeng@oracle.com>
branch nick: mysql-5.6-14287539
timestamp: Thu 2012-08-23 09:22:12 +0200
message:
  Bug#14287539 CRASH (ASSERT) IN CREATE_SORT_INDEX WHEN USING
  SQL_BIG_RESULT ON JOIN QUERY
  
  Problem: An assertion fires for some queries with JOIN and the
  SQL_BIG_RESULT hint.
  
  Tables that are accessed in a way that guarantees they will return
  zero or one rows may be treated as constants. If the join condition
  contains references to such tables, the optimizer may deduce that
  further tables can be treated as constants and hence change the join
  type from JT_REF to JT_CONST in create_ref_for_key(). At this point,
  however, it is too late to move the JOIN_TAB to the head of the list
  and increment JOIN::const_tables.
  
  Due to this, the executor will enter create_sort_index() for this
  table, but since the join type has been changed from JT_REF to
  JT_CONST, an assertion fires.
  
  The assertion, and this bug, was introduced by
  revid:evgeny.potemkin@oracle.com-20120531162137-cbjkcjul3c3vyldh as
  part of WL#6071.
  
  Fix: In JOIN::make_tmp_tables_info(), skip sorting if join_type is
  JT_CONST.
------------------------------------------------------------
revno: 4149
committer: Dmitry Lenev <Dmitry.Lenev@oracle.com>
branch nick: mysql-5.6-keydup-2
timestamp: Wed 2012-08-22 20:31:19 +0400
message:
  Fix for bug #14404635  "ASSERTION `!MAYBE_NULL == !KEY_INFO[*ADD].
  KEY_PART[KEY_PART]. FIELD->REAL_MAYBE_".
  
  Attempt to add an index on InnoDB table and change nullability of
  column participating in this index in the same ALTER TABLE led to
  assertion failure.
  
  The assert was firing because code in innobase_create_key_defs()
  assumed that information about nullability of column in
  KEY_PART_INFO object for a column in new index is consistent
  with a state of Field object for the same column referenced by
  KEY_PART_INFO::field member. This was not true in general case
  since for columns which existed in table before ALTER
  KEY_PART_INFO::field member pointed to Field object respresenting
  old, unchanged version of column. While other information in
  KEY_PART_INFO corresponds to new version of column, with changes
  taken into account.
  
  This patch fixes the problem by changing code to always store in
  KEY_PART_INFO::field pointers to Field object which correspond to
  new version of columns.
  Unfortunately, InnoDB's code responsible for reporting duplicate
  key errors during in-place ALTER TABLE relied on old behavior, i.e.
  that KEY_PART_INFO::field contained Field object which was bound to
  TABLE::record[] for old version of table.
  So this patch also changes InnoDB code for in-place ALTER TABLE to
  use record buffer for new version of table for duplicate key
  reporting.
------------------------------------------------------------
revno: 4148
committer: Alexander Barkov <alexander.barkov@oracle.com>
branch nick: mysql-5.6.b14468106
timestamp: Wed 2012-08-22 17:50:55 +0400
message:
  Bug#14468106 READ OF FREED MEMORY WITH GROUP_CONCAT ON GEOMETRY VALUES
  
  Problem: Field_geom (which is a Field_blob child) did not use
  table->blob_storage - a memory helper storage previously added into Field_blob,
  to handle "GROUP_CONCAT with DISTINCT or ORDER BY" properly.
  
  Fix:
  - Moving table->blob_storage related code into a separate private
    method Field_blob::store_to_mem().
  
  - Moving Field_blob and Field_geom specific code into a new private
    virtual methods Field_blob::store_internal() and Field_geom::store_internal().
  
  - Rewriting Field_blob::store(), so now it shares the common code
    between Field_blob and Field_geom, to handle empty strings and
    table->blob_storage operations, and then calls the specific code
    from store_internal().
  
  - An additional helper protected  method Field_blob::store_ptr_and_length()
    was added, to avoid a few duplicate code pieces in Field_blob and
    Field_geom.
------------------------------------------------------------
revno: 4147
committer: Norvald H. Ryeng <norvald.ryeng@oracle.com>
branch nick: mysql-5.6-14209318
timestamp: Wed 2012-08-22 15:01:21 +0200
message:
  Bug#14209318 ASSERTION FAILED: !TABLES ||
  THD->LEX->IS_QUERY_TABLES_LOCKED(), FILE SQL_OPTIMI
  
  Problem: Some queries with a HAVING clause with a function that refers
  to a function in the WHERE list with a subquery as parameter cause an
  assertion to be fired.
  
  Item_row::fix_fields does not update with_subselect, so if a subquery
  is wrapped in an Item_row, with_subselect and has_subquery() will be
  false for all Items further up in the tree.
  
  To find out if an item is constant or not, Item::const_item() checks
  can_be_evaluated_now(), which again checks has_subquery(). Since
  Item_row::has_subquery() returns an incorrect answer, items may be
  taken to be constant when they are not. This may lead to evaluating an
  item during resolving, even if the item is not ready to be evaluated
  yet.
  
  Fix: Set with_subselect in Item_row::fix_fields().
------------------------------------------------------------
revno: 4146
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: mysql-5.6
timestamp: Wed 2012-08-22 20:30:48 +0800
message:
  Fix Bug 14252821 - OPTIMIZE INNODB MEMCACHED WITH BIN-LOG ENABLED
  
  rb://1180 approved by Sunny Bains
------------------------------------------------------------
revno: 4145
committer: Manish Kumar<manish.4.kumar@oracle.com>
branch nick: mysql-5.6_14259744
timestamp: Wed 2012-08-22 17:52:33 +0530
message:
  BUG#14259744 - RPL.RPL_PACKET TEST FAILS ON PB2 AFTER WL#5924 CHANGES
  
  Problem : The basic reason for the failure was the change in the connection 
            attributes introduced as a part of WL#5924. The lenght of packet 
            with information that was sent over when a client's connected to 
            the server was changed as a part of this worklog. 
            But the packet information that is sent across from the client 
            to the server is of greater length in case of windows compared to the 
            information sent in case of linux which was caused due to the 
            WL5924 implementation.
  
            This is because apart from the all the common information was added
            on the client connect string (WL5924) we also have few extra 
            parameters specifically for windows platform :
  
            Only on windows:
                _command_line : the process command line
                _thread : the calling thread id from GetCurrentThreadId()
  
            In this test the value of max_allowed_packet is reduced when the 
            server starts using the option passed in the .opt file. So when 
            mysqltest tries to connect to the server, on windows the client 
            information that is sent exceeds the max_allowed_packet of the 
            server which causes the failure.
  
  Fix : The problem is fixed by appropriately modifying the max_allowed_packet of
        two servers and modifying the test accordingly.
------------------------------------------------------------
revno: 4144
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Wed 2012-08-22 14:41:07 +0300
message:
  Add big_test option to a long-running test.
------------------------------------------------------------
revno: 4143
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Wed 2012-08-22 14:34:31 +0300
message:
  Fix a test result mismatch.
------------------------------------------------------------
revno: 4142
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Wed 2012-08-22 14:21:08 +0300
message:
  Bug#14509077 INNODB.INNODB_BUG13867871 TEST FAILURE
  
  The test was not deterministic. Ensure with wait_condition.inc that
  all DEBUG_SYNC points are actually being reached. Additionally, the
  nondeterminism of the test revealed one bug:
  
  ha_innobase::commit_inplace_alter_table(): X-lock the table before
  committing the changes. In this way, the table definition cannot be
  changed while there exist transactions that hold locks on the table,
  for example, due to FOREIGN KEY checks that are not covered by MySQL
  meta-data locks.
  
  rb:1235 approved by Jimmy Yang
------------------------------------------------------------
revno: 4141
committer: Rohit Kalhans <rohit.kalhans@oracle.com>
branch nick: mysql-5.6_b14390948
timestamp: Wed 2012-08-22 13:54:05 +0530
message:
  BUG#14390948:
  Problem: The following assert 
  mts_assigned_partitions[i]->usage > 0 fails sporadically.
  
  Background: There is a race condition when the Coordinator
  thread (C) and the worker thread(W) access the member usage
  e.g. in the following example.
  C-> lock() usage++; unlock();
  W-> lock() usage--; unlock();
  C-> assert(usage>0);
  This causes a race and the last assert fails.
  
  Solution: We fix this problem by modifying the assert
  to usage >= 0 
------------------------------------------------------------
revno: 4140
committer: kevin.lewis@oracle.com
branch nick: mysql-5.6-push
timestamp: Tue 2012-08-21 12:31:57 -0500
message:
  Bug #13450566-UPDATING 16M BLOB CAUSES TOO MANY RECURSIVE X-LOCKS
  
  This changes the way rw-locks keep track of recursive write or
  x-locks by decrementing recursive x-locks by 1 instead of
  X_LOCK_DECR (0x00100000).  But this decrement by 1 only happens
  with the third x-lock by the same thread, which is the second
  recursive x-lock.
  
  Instead of subtracting X_LOCK_DECR for every recursive lock, this
  patch subtracts it once for the initial x-lock, once for the first
  recursive x-lock, and by just 1 thereafter.  So now the ranges for
  lock_word are like this this;
  
  X_LOCK_DECR   = not locked
  1 to X_LOCK_DECR-1
                = s-locked by X_LOCK_DECR-n threads
  0             = x-locked once
  -X_LOCK_DECR+1 to -1
                = reserved by an x-locking thread but still has s-locks
  -(2*X_LOCK_DECR) to -X_LOCK_DECR
                = recursively x-locked by a single thread
  
  Only the last range listed above has changed.  The rest are the same
  as before.
------------------------------------------------------------
revno: 4139
committer: Georgi Kodinov <Georgi.Kodinov@Oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-08-16 18:00:09 +0300
message:
  Bug #14503692: -SSL-CRL AND --SSL-CRLPATH HAVE A WRONG OPTION ID
  
  Fixed the ids of the command line options to use the correct option ids.
------------------------------------------------------------
revno: 4138
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: mysql-5.6
timestamp: Tue 2012-08-21 19:33:04 +0800
message:
  Fix Bug #14156259 - BROKEN ERROR HANDLING IN ALTER TABLE...ADD FOREIGN
        
  rb://1119 Approved by Marko
------------------------------------------------------------
revno: 4137
committer: Nuno Carvalho <nuno.carvalho@oracle.com>
branch nick: mysql-5.6
timestamp: Tue 2012-08-21 11:27:20 +0100
message:
  BUG#14116526: RPL.RPL_GTID_SQL_UNTIL_BEFORE_AFTER FAILS WITH RESULT LENGTH MISMATCH ON TRUNK.
  
  rpl_gtid_sql_until_before_after has sporadic failures on pb2 on valgrind
  runs. On slow/overloaded platforms SQL_THREAD_WAIT_AFTER_GTIDS may
  timeout before reaching the condition, which query result is not being
  logged due to nondeterministic return value.
  
  To avoid SQL_THREAD_WAIT_AFTER_GTIDS returns before reaching the
  condition, disabled timeout from SQL_THREAD_WAIT_AFTER_GTIDS query.
------------------------------------------------------------
revno: 4136
committer: Manish Kumar<manish.4.kumar@oracle.com>
branch nick: mysql-5.6
timestamp: Tue 2012-08-21 14:20:39 +0530
message:
  BUG#14381701 - DELETING FROM A HASH WHILE ITERATING OVER IT IS WRONG
  
  Problem - The problem is that in sql/rpl_rli_pdb.cc file we delete
            from a hash while iterating over it. This is wrong since 
            delete operation might rearrange elements in hash, 
            so "iterator" will become invalid and, unless extra steps
            are taken, such iteration is likely to miss elements which 
            should have been deleted otherwise.
  
  Fix - The problem is fixed by storing the address of the Hash elements 
        that needs to be deleted based on the usage, in the Dynamic array
        of pointers in a for loop. In a second iteration we pop the 
        elements of the dynamic array and delete the Hash element from 
        that address. This will not cause any inconsistency.
------------------------------------------------------------
revno: 4135 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Tue 2012-08-21 11:15:05 +0300
message:
  Merge mysql-5.5 to mysql-5.6.
    ------------------------------------------------------------
    revno: 2875.392.61 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.5
    timestamp: Tue 2012-08-21 10:59:11 +0300
    message:
      Merge mysql-5.1 to mysql-5.5.
        ------------------------------------------------------------
        revno: 2661.851.37
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.1
        timestamp: Tue 2012-08-21 10:47:17 +0300
        message:
          Fix regression from Bug#12845774 OPTIMISTIC INSERT/UPDATE USES WRONG
          HEURISTICS FOR COMPRESSED PAGE SIZE
          
          The fix of Bug#12845774 was supposed to skip known-to-fail
          btr_cur_optimistic_insert() calls. There was only one such call, in
          btr_cur_pessimistic_update(). All other callers of
          btr_cur_pessimistic_insert() would release and reacquire the B-tree
          page latch before attempting the pessimistic insert. This would allow
          other threads to restructure the B-tree, allowing (and requiring) the
          insert to succeed as an optimistic (single-page) operation.
          
          Failure to attempt an optimistic insert before a pessimistic one would
          trigger an attempt to split an empty page.
          
          rb:1234 approved by Sunny Bains
------------------------------------------------------------
revno: 4134 [merge]
committer: Norvald H. Ryeng <norvald.ryeng@oracle.com>
branch nick: mysql-5.6-merge
timestamp: Tue 2012-08-21 10:00:30 +0200
message:
  Local merge.
    ------------------------------------------------------------
    revno: 4132.1.1
    committer: Norvald H. Ryeng <norvald.ryeng@oracle.com>
    branch nick: mysql-5.6-14329235
    timestamp: Tue 2012-08-21 08:58:05 +0200
    message:
      Bug#14329235 INCORRECT SEMANTICS FOR "> ALL" WHEN NULL IN SUB QUERY
      
      In revid:norvald.ryeng@oracle.com-20120502074409-tdwrm80ndkwjq0c9 (fix
      for bug Bug#13330886), MIN/MAX transformation of nullable ALL
      subqueries were meant to be blocked. This bug is a case where the test
      guarding against transformation fails to filter out all such
      queries. This patch fixes one of two possible methods for doing the
      MIN/MAX transformations and opens it up for nullable ALL subqueries.
      
      Problem: Queries with ALL over a UNION may return an incorrect result
      if the UNION result contains NULL.
      
      Since revid:norvald.ryeng@oracle.com-20120502074409-tdwrm80ndkwjq0c9,
      nullable ALL subqueries should not be transformed to MAX/MIN
      queries. However, for a UNION, the test only checks the nullability of
      the first SELECT, so an ALL subquery with UNION where the first SELECT
      in the UNION is not nullable (but a subsequent SELECT of the UNION is)
      is able to pass the test in
      Item_in_subselect::single_value_transformer() meant to prevent
      transformation.
      
      The subquery is rewritten to a MAX/MIN query using an
      Item_maxmin_subselect. This item uses a
      select_max_min_finder_subselect object to find the maximum or minimum
      value. The comparison functions in select_max_min_finder_subselect
      ignores NULL values and will find the maximum or minimum non-NULL
      value. This is fine for ANY subqueries, but the result of an ALL
      predicate should be UNKNOWN if there are NULL values in the subquery
      result, so if aggregating for ALL, select_max_min_finder_subselect
      should not ignore NULLs.
      
      Fix: Make the test for nullable subqueries handle UNIONs
      correctly. Add a parameter to the constructors of
      Item_maxmin_subselect and select_max_min_finder_subselect that tells
      if the aggregation should ignore NULL values and check this field
      during comparisons so that NULL is returned as the maximum or minimum
      value if a NULL is found in the subquery result and NULL values are
      not ignored.
      
      The above change to select_max_min_finder_subselect makes it possible
      to transform nullable ALL subqueries, so this patch allows
      transformation of these using Item_maxmin_subselect. Transformation
      using Item_sum_max/Item_sum_min is still not allowed.
------------------------------------------------------------
revno: 4133
committer: Nirbhay Choubey <nirbhay.choubey@oracle.com>
branch nick: 5.6
timestamp: Tue 2012-08-21 12:40:32 +0530
message:
  Bug#14458293 WRITE PASSED END OF BUFFER IN
      VALIDATE_DICTIONARY_CHECK
  
  Post-fix : PB2 build failures.
------------------------------------------------------------
revno: 4132
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-5.6
timestamp: Tue 2012-08-21 12:09:29 +0530
message:
  - fixed issues in TC to avoid pb2 regression caused by my checkin
    related to bug#14219233.
  
    issues: select * from child; output is non-predictable as
    post rollback if alter table thrd is scheduled first then
    select * from child will reflect updated data else original data.
  
    fix: corrected by executing select * from child post alter.
  
    side-fix: also updated test-case to use polling instead of sleep 
    as suggested by Marko.
    got it reviewed from Marko over chat.
------------------------------------------------------------
revno: 4131
committer: Manish Kumar<manish.4.kumar@oracle.com>
branch nick: mysql_14267128
timestamp: Tue 2012-08-21 11:40:46 +0530
message:
  BUG#14267128 - BINLOG GROUP COMMIT COMPLETELY LOSES XA TRANSACTION BINLOGGING.
  
  Problem - XA transaction is not binlogged after the changes made in the replication 
            code for the binlog group commit. Due to this XA events were getting lost.
  
  Fix - The earlier behavior of logging the XA events in the binlog is restored.
------------------------------------------------------------
revno: 4130
committer: Inaam Rana <inaam.rana@oracle.com>
branch nick: mysql-5.6
timestamp: Mon 2012-08-20 19:43:03 -0400
message:
  Bug#11754304 INNODB CALLS FSYNC FOR WRITES WITH INNODB_FLUSH_METHOD=O_DIRECT
  
  rb://1226
  approved by: Sunny Bains
  
  Add a new possible value O_DIRECT_NO_FSYNC to innodb_flush_method.
  This value will implies that the user wants to use O_DIRECT with
  no fsync() which is different from existing O_DIRECT which means
  use O_DIRECT but also call fsync() to cover unknown/unexpected
  behaviour of FS.
------------------------------------------------------------
revno: 4129
committer: Nirbhay Choubey <nirbhay.choubey@oracle.com>
branch nick: B14458293-5.6
timestamp: Mon 2012-08-20 21:29:33 +0530
message:
  Bug#14458293 WRITE PASSED END OF BUFFER IN
  VALIDATE_DICTIONARY_CHECK
  
  This patch adds an extra parameter to
  mysql_string_convert_to_char_ptr() service
  API to take [IN] maximum length of the OUT
  buffer. (buffer_length)
  
  Triggered by this change, password_validation
  plugin now sends MAX_PASSWORD_LENGTH to this
  API, which in turn makes sure that a byte is
  always available for storage of the terminating
  '\0'. Also, modified all affected ABI files
  accordingly.
  
  Added a test case & verified with Valgrind.
------------------------------------------------------------
revno: 4128 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Mon 2012-08-20 14:15:21 +0300
message:
  Merge mysql-5.6 to local working copy.
    ------------------------------------------------------------
    revno: 4126.1.2 [merge]
    committer: Mattias Jonsson <mattias.jonsson@oracle.com>
    branch nick: topush-5.6_2
    timestamp: Mon 2012-08-20 12:52:49 +0200
    message:
      merge
        ------------------------------------------------------------
        revno: 2875.392.60 [merge]
        committer: Mattias Jonsson <mattias.jonsson@oracle.com>
        branch nick: topush-5.5
        timestamp: Mon 2012-08-20 12:44:40 +0200
        message:
          merge
            ------------------------------------------------------------
            revno: 2661.851.36
            committer: Mattias Jonsson <mattias.jonsson@oracle.com>
            branch nick: topush-5.1
            timestamp: Mon 2012-08-20 12:39:36 +0200
            message:
              Bug#13025132 - PARTITIONS USE TOO MUCH MEMORY
              
              pre-push fix, removed unused variable.
        ------------------------------------------------------------
        revno: 2875.392.59 [merge]
        committer: Mattias Jonsson <mattias.jonsson@oracle.com>
        branch nick: topush-5.5
        timestamp: Mon 2012-08-20 11:20:00 +0200
        message:
          merge
            ------------------------------------------------------------
            revno: 2661.851.35 [merge]
            committer: Mattias Jonsson <mattias.jonsson@oracle.com>
            branch nick: topush-5.1
            timestamp: Mon 2012-08-20 11:18:17 +0200
            message:
              merge
        ------------------------------------------------------------
        revno: 2875.392.58 [merge]
        committer: Mattias Jonsson <mattias.jonsson@oracle.com>
        branch nick: topush-5.5
        timestamp: Mon 2012-08-20 11:19:02 +0200
        message:
          merge
    ------------------------------------------------------------
    revno: 4126.1.1 [merge]
    committer: Mattias Jonsson <mattias.jonsson@oracle.com>
    branch nick: topush-5.6_2
    timestamp: Mon 2012-08-20 12:50:53 +0200
    message:
      merge
        ------------------------------------------------------------
        revno: 4095.6.2 [merge]
        committer: Mattias Jonsson <mattias.jonsson@oracle.com>
        branch nick: b13025132-56
        timestamp: Mon 2012-08-20 10:19:45 +0200
        message:
          manual merge 5.5 -> 5.6
            ------------------------------------------------------------
            revno: 2875.401.2 [merge]
            committer: Mattias Jonsson <mattias.jonsson@oracle.com>
            branch nick: b13025132-55
            timestamp: Mon 2012-08-20 09:55:54 +0200
            message:
              merge
                ------------------------------------------------------------
                revno: 2661.857.2
                committer: Mattias Jonsson <mattias.jonsson@oracle.com>
                branch nick: b13025132-51
                timestamp: Fri 2012-08-17 14:25:32 +0200
                message:
                  Bug#13025132 - PARTITIONS USE TOO MUCH MEMORY
                  
                  Additional patch to remove the part_id -> ref_buffer offset.
                  
                  The partitioning id and the associate record buffer can
                  be found without having to calculate it.
                  
                  By initializing it for each used partition, and then reuse
                  the key-buffer from the queue, it is not needed to have
                  such map.
        ------------------------------------------------------------
        revno: 4095.6.1 [merge]
        committer: Mattias Jonsson <mattias.jonsson@oracle.com>
        branch nick: b13025132-56
        timestamp: Wed 2012-08-15 15:19:43 +0200
        message:
          manual merge 5.5->5.6
          
          utilizing the 5.6 function bitmap_get_next_set() to
          improve speed of loop over all partitions.
            ------------------------------------------------------------
            revno: 2875.401.1 [merge]
            committer: Mattias Jonsson <mattias.jonsson@oracle.com>
            branch nick: b13025132-55
            timestamp: Wed 2012-08-15 14:56:55 +0200
            message:
              manual merge 5.1->5.5
                ------------------------------------------------------------
                revno: 2661.857.1
                committer: Mattias Jonsson <mattias.jonsson@oracle.com>
                branch nick: b13025132-51
                timestamp: Wed 2012-08-15 14:31:26 +0200
                message:
                  Bug#13025132 - PARTITIONS USE TOO MUCH MEMORY
                  
                  The buffer for the current read row from each partition
                  (m_ordered_rec_buffer) used for sorted reads was
                  allocated on open and freed when the ha_partition handler
                  was closed or destroyed.
                  
                  For tables with many partitions and big records this could
                  take up too much valuable memory.
                  
                  Solution is to only allocate the memory when it is needed
                  and free it when nolonger needed. I.e. allocate it in
                  index_init and free it in index_end (and to handle failures
                  also free it on reset, close etc.)
                  
                  Also only allocating needed memory, according to
                  partitioning pruning.
                  
                  Manually tested that it does not use as much memory and
                  releases it after queries.
------------------------------------------------------------
revno: 4127
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Mon 2012-08-20 13:52:58 +0300
message:
  Bug#14389788 INNODB: NEW WARNINGS ON WINDOWS
  
  row_merge_read_clustered_index(): Add some explicit type casts.
  There should be no loss of precision possible, because the auto-increment
  values use a granularity of 1 and they should be limited to the maximum
  value that can be accurately represented in floating-point format.
------------------------------------------------------------
revno: 4126
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6
timestamp: Mon 2012-08-20 12:22:12 +0200
message:
  Fixed build warning: unused variable
------------------------------------------------------------
revno: 4125 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6-bug14113704
timestamp: Mon 2012-08-20 11:42:20 +0200
message:
  Local merge
    ------------------------------------------------------------
    revno: 4095.1.69
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-5.6_b13389196
    timestamp: Mon 2012-08-20 14:14:27 +0530
    message:
      Bug #13389196:BUILD FAILS IF P_S IS DISABLED WITH:
      -DWITH_PERFSCHEMA_STORAGE_ENGINE:BOOL=OFF
      
      Problem: Build failure while building MySQL-5.6 when 
      performance schema is disabled.(i.e. compiling using the
      option -DWITH_PERFSCHEMA_STORAGE_ENGINE=OFF).
      
      Background: A few misplaced comma(',') in the the
      conditionally included code has caused this problem.
      
      Fix: Changed the comma positions so that the conditionally
      included code compiles properly.
      
       
------------------------------------------------------------
revno: 4124
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6-bug14113704
timestamp: Mon 2012-08-20 11:41:04 +0200
message:
  Fixed code review comments, to avoid code duplication.
------------------------------------------------------------
revno: 4123 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6-bug14113704
timestamp: Mon 2012-08-20 11:03:11 +0200
message:
  Local merge
    ------------------------------------------------------------
    revno: 4095.1.68
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2012-08-17 15:20:51 +0300
    message:
      Bug#14389788 INNODB: NEW WARNINGS ON WINDOWS
      
      row_log_table_delete(), row_log_table_low_redundant(), row_log_table_low():
      Explicitly cast the integers to unsigned 8-bit, before writing to the
      temporary file buffer. There already were debug assertions in place, guarding
      against overflow.
      
      Approved by Inaam Rana on IM.
    ------------------------------------------------------------
    revno: 4095.1.67
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-bug13742712blob
    timestamp: Fri 2012-08-17 13:44:02 +0200
    message:
      Bug#13742712 UNINITIALIZED BLOB->LENGTH LEADS TO VALGRIND WARNINGS AND CRASHES
        
      Part two: return NULL from subquery also if there is no 'where false' outer query.
      In executor: call no_rows_in_result before join->clear()
    ------------------------------------------------------------
    revno: 4095.1.66
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-bug13742712blob
    timestamp: Fri 2012-08-17 13:24:43 +0200
    message:
      Bug#13742712 UNINITIALIZED BLOB->LENGTH LEADS TO VALGRIND WARNINGS AND CRASHES
      
      If we decide to "return_zero_rows()" during execution,
      we need to generate NULL values for all columns in the result.
      The simplest way of doing that for "singlerow_subselect"
      seems to be to skip execution, and simply return NULL
      in all the val_xxx() member functions.
    ------------------------------------------------------------
    revno: 4095.1.65
    committer: Alexander Barkov <alexander.barkov@oracle.com>
    branch nick: mysql-5.6.b14497827
    timestamp: Fri 2012-08-17 14:23:48 +0400
    message:
      Bug#14497827 ASSERTION IN GEOMETRY::COLLECTION_INIT_FROM_OPRESULT()
      
      Problem: a hole of a polygon which had the same coodinates,
      was converted to a point, creating this operation buffer:
      
      1. polygon (external ring)
      2. hole1   ("nornal" internal ring)
      3. point   (a hole converted to a point)
      4. hole2   ("normal" internal ring)
      
      which made Geometry::collection_init_from_opresult() crash on hole2,
      as a hole is not expected as an independent shape.
      
      Fix: instead of converting to a point, completely remove such empty holes.
      The fixed operation buffer corresponding to the above example is:
      
      1. polygon (external ring)
      2. hole1   ("nornal" internal ring)
      3. hole2   ("normal" internal ring)
    ------------------------------------------------------------
    revno: 4095.1.64 [merge]
    committer: Alexander Barkov <alexander.barkov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2012-08-17 13:24:23 +0400
    message:
      Merging from 5.5
        ------------------------------------------------------------
        revno: 2875.392.57 [merge]
        committer: Alexander Barkov <alexander.barkov@oracle.com>
        branch nick: mysql-5.5
        timestamp: Fri 2012-08-17 13:18:56 +0400
        message:
          Merging from 5.5
            ------------------------------------------------------------
            revno: 2661.851.34
            committer: Alexander Barkov <alexander.barkov@oracle.com>
            branch nick: mysql-5.1
            timestamp: Fri 2012-08-17 13:14:04 +0400
            message:
              Backporting Bug 14100466 from 5.6.
    ------------------------------------------------------------
    revno: 4095.1.63
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2012-08-17 10:36:28 +0300
    message:
      Merge fix for Bug#12845774 OPTIMISTIC INSERT/UPDATE USES WRONG HEURISTICS
      FOR COMPRESSED PAGE SIZE
      
      The change of semantics broke online secondary index creation in MySQL
      5.6 (WL#5526). In the original merge, I only adjusted online table
      rebuild (WL#6255).
      
      row_log_apply_op_low(): Always attempt btr_cur_optimistic_insert()
      before btr_cur_pessimistic_insert().
      
      Approved by Sunny Bains on IM
    ------------------------------------------------------------
    revno: 4095.1.62
    committer: prabakaran thirumalai <prabakaran.thirumalai@oracle.com>
    branch nick: mysql-5.6-mdl
    timestamp: Fri 2012-08-17 13:01:20 +0530
    message:
      follow up patch for Bug#14213236
    ------------------------------------------------------------
    revno: 4095.1.61 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-16 20:03:06 +0300
    message:
      Merge mysql-5.5 to mysql-5.6.
        ------------------------------------------------------------
        revno: 2875.392.56 [merge]
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2012-08-16 18:47:26 +0300
        message:
          Merge mysql-5.1 to mysql-5.5.
            ------------------------------------------------------------
            revno: 2661.851.33
            committer: Marko M?kel? <marko.makela@oracle.com>
            branch nick: mysql-5.1
            timestamp: Thu 2012-08-16 17:45:39 +0300
            message:
              Bug#12595091 POSSIBLY INVALID ASSERTION IN BTR_CUR_PESSIMISTIC_UPDATE()
              
              Facebook got a case where the page compresses really well so that
              btr_cur_optimistic_update() returns DB_UNDERFLOW, but when a record
              gets updated, the compression rate radically changes so that
              btr_cur_insert_if_possible() can not insert in place despite
              reorganizing/recompressing the page, leading to the assertion failing.
              
              rb:1220 approved by Sunny Bains
            ------------------------------------------------------------
            revno: 2661.851.32
            committer: Marko M?kel? <marko.makela@oracle.com>
            branch nick: mysql-5.1
            timestamp: Thu 2012-08-16 17:37:52 +0300
            message:
              Bug#12845774 OPTIMISTIC INSERT/UPDATE USES WRONG HEURISTICS FOR
              COMPRESSED PAGE SIZE
              
              This was submitted as MySQL Bug 61456 and a patch provided by
              Facebook. This patch follows the same idea, but instead of adding a
              parameter to btr_cur_pessimistic_insert(), we simply remove the
              btr_cur_optimistic_insert() call there and add it to the only caller
              that needs it.
              
              btr_cur_pessimistic_insert(): Do not try btr_cur_optimistic_insert().
              
              btr_insert_on_non_leaf_level_func(): Invoke btr_cur_optimistic_insert()
              before invoking btr_cur_pessimistic_insert().
              
              btr_cur_pessimistic_update(): Clarify in a comment why it is not
              necessary to invoke btr_cur_optimistic_insert().
              
              btr_root_raise_and_insert(): Assert that the root page is not empty.
              This could happen if a pessimistic insert (involving a split or merge)
              is performed without first attempting an optimistic (intra-page) insert.
              
              rb:1219 approved by Sunny Bains
            ------------------------------------------------------------
            revno: 2661.851.31
            committer: Marko M?kel? <marko.makela@oracle.com>
            branch nick: mysql-5.1
            timestamp: Thu 2012-08-16 17:31:23 +0300
            message:
              Bug#13523839 ASSERTION FAILURES ON COMPRESSED INNODB TABLES
              
              btr_cur_optimistic_insert(): Remove a bogus assertion. The insert may
              fail after reorganizing the page.
              
              btr_cur_optimistic_update(): Do not attempt to reorganize compressed pages,
              because compression may fail after reorganization.
              
              page_copy_rec_list_start(): Use page_rec_get_nth() to restore to the
              ret_pos, which may also be the page infimum.
              
              rb:1221
    ------------------------------------------------------------
    revno: 4095.1.60
    committer: Gleb Shchepa <gleb.shchepa@oracle.com>
    branch nick: 5.6-bug14084642
    timestamp: Thu 2012-08-16 19:54:43 +0400
    message:
      Bug #14084642: ASSERTION FAILED: 0, FILE OPT_EXPLAIN_JSON.CC, LINE 1139
      
      The Server failed with an assertion explaining queries with
      impossible WHERE expression and subqueries in ORDER BY or GROUP BY
      clauses.
      
      The join_ctx::add_subquery() function has been modified to
      take into account ORDER/GROUP BY subqueries and show them
      as "optimized_away_subqueries".
    ------------------------------------------------------------
    revno: 4095.1.59
    committer: prabakaran thirumalai <prabakaran.thirumalai@oracle.com>
    branch nick: mysql-5.6-thr_running
    timestamp: Thu 2012-08-16 18:41:09 +0530
    message:
      Bug#14471011 THREADS_RUNNING VARIABLE STATUS ALWAYS DISPLAYS
      ZERO WITH ACTIVE THREADS RUNNING
      
      Analysis:
      Local variable num_thread_running in inc_thread_running()
      and dec_thread_running() defined in mysqld.h hides global
      status variable with same name
      
      Fix:
      Change local variable name num_thread_running to num_threads
    ------------------------------------------------------------
    revno: 4095.1.58
    committer: prabakaran thirumalai <prabakaran.thirumalai@oracle.com>
    branch nick: mysql-5.6-mdl
    timestamp: Thu 2012-08-16 18:19:45 +0530
    message:
      Bug#14213236 ALTER TABLE...DISCARD TABLESPACE FAILS TO ACQUIRE MDL
      
      Analysis:
      DISCARD/IMPORT TABLESPACE takes MDL lock on table using
      MDL_SHARED_WRITE mode. When it is invoked with concurrent
      ALTER TABLE...ADD/DROP(which initially takes MDL_SHARED_UPGRADE),
      lock is granted and the tablespace is discarded under
      ALTER TABLE's feet. As result ALTER TABLE might generate
      extra warnings or even result in assertion failure.
      
      Fix:
      Instead of taking compatible MDL lock mode MDL_SHARED_WRITE,
      use MDL_EXCLUSIVE mode during ALTER...IMPORT/DISCARD, such
      that lock request for ALTER...DISCARD will block till
      ALTER...ADD/DROP releases MDL lock on that table.
      
      Notes:
      ALTER...DISCARD TABLESPACE test case in innodb.innodb-index-online
      is removed because locking is now handled at SQL Layer using MDL
      lock but the test case hardcodes table level lock and expects
      ALTER TABLE...ADD/DROP INDEX to timeout.
    ------------------------------------------------------------
    revno: 4095.1.57
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-16 15:25:35 +0530
    message:
      
      Bug #14219233 FOREIGN KEY...CASCADE OR SET NULL MAY CONFLICT WITH ONLINE DDL
      
      
      For "ALTER .... INPLACE (LOCK=NONE/DEFAULT) we avoid online inplace and 
      so force it to use SHARED lock.
      
      This is done to protect ALTER TABLE INPLACE against a bug in
      MySQL MDL that fails to lock foreign key table while modifying
      the parent table in a way that affects foreign table.
      (For example: delete from parent; will affect child table if
      there is fk-del-on-cascade/set-null dependency on child table.)
      If avoided, this leads to an issue in form that parallel
      transaction running ALTER TABLE is allowed to proceed on TABLE
      that is already being modified by other transaction, further 
      causing data-inconsistency.
      
      Remove this fix once WL#6049 is fixed as it would take
      care of the issue in MySQL MDL locking.
      
      This bug also update TC for bug#14189862 as they are related.
    ------------------------------------------------------------
    revno: 4095.1.56
    committer: Ashish Agarwal<ashish.y.agarwal@oracle.com>
    branch nick: DML_BUGS
    timestamp: Thu 2012-08-16 11:39:34 +0530
    message:
      BUG#12939701: CRASH HANDLER::HA_STATISTIC_INCREMENT
      BUG#12939956: ASSERT IN HA_HEAP::INFO
      
      ISSUE: Changing the view parameters.
             View v1 is created on table t1, updatable view.
             View v2 is created on view v1, also updatable view.
             Drop the view v1 and re-creating it as a non-updatable
             view. When any of INSERT/UPDATE/DELETE query is made
             it only checks weather the top_view (v2) is updatable
             or not, all the underlying views are not checked.
             As in a normal senario a updatable view cannot
             be created over a non-updatable view.
             In this case a INSERT/UPDATE/DELETE query on v2 tries
             to update a non-updatable view(v1) which results in
             server crash. v1 is a non-mergeable view so instead
             of updating the actual table (t1) UPDATE query tries
             to UPDATE v1.
      
      SOLUTION: When any of INSERT/UPDATE/DELETE query is made
                on an updatable view, introducing a check which
                will check weather the underlying views are
                non-updatable. This check is only done when the
                query is made on updatable, non-multitable view.
    ------------------------------------------------------------
    revno: 4095.1.55
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: 5.6
    timestamp: Thu 2012-08-16 14:18:57 +1000
    message:
      Non-functional change. Fix formatting.
    ------------------------------------------------------------
    revno: 4095.1.54
    committer: Alexander Barkov <alexander.barkov@oracle.com>
    branch nick: mysql-5.6.b12368577
    timestamp: Wed 2012-08-15 14:38:01 +0400
    message:
      Preparatory patch for bug#12368577.
      - Moving all user_var_entry functionality from static functions
        into class user_var_entry.
      - Encapsulating m_ptr, m_length and m_type members.
      - Using Simple_cstring for the "name" member.
    ------------------------------------------------------------
    revno: 4095.1.53
    committer: Alexander Barkov <alexander.barkov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2012-08-15 13:29:12 +0400
    message:
      A post-fix for Bug # 13938850 HANDLE_FATAL_SIG IN MEMCPY FROM GET_POINT
      The assert in chunk_info_cmp() assumed that the function cannot be executed
      with two exactly the same chunks. This assumption was wrong,
      because qsort() uses temporary buffers and in some cases compares
      a chunk to itself. Removing the assert, changing the code to return
      0 for exactly the same chunks.
    ------------------------------------------------------------
    revno: 4095.1.52
    committer: Guilhem Bichot <guilhem.bichot@oracle.com>
    branch nick: 5.6-2
    timestamp: Tue 2012-08-14 16:48:27 +0200
    message:
      code simplification: remove JOIN::all_tables array.
    ------------------------------------------------------------
    revno: 4095.1.51 [merge]
    committer: Venkata Sidagam <venkata.sidagam@oracle.com>
    branch nick: 5.6
    timestamp: Tue 2012-08-14 15:17:41 +0530
    message:
      Bug #12992993  MYSQLHOTCOPY FAILS IF VIEW EXISTS
      
      Merged from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.392.55
        committer: Venkata Sidagam <venkata.sidagam@oracle.com>
        branch nick: 5.5
        timestamp: Tue 2012-08-14 15:13:30 +0530
        message:
          Bug #12992993  MYSQLHOTCOPY FAILS IF VIEW EXISTS
          
          Problem description:
          mysqlhotcopy fails if a view presents in the database.
          
          Analysis:
          Before 5.5 'FLUSH TABLES <tbl_name> ... WITH READ LOCK' will able 
          to get lock for all tables (i.e. base tables and view tables). 
          In 5.5 onwards 'FLUSH TABLES <tbl_name> ... WITH READ LOCK' for 
          'view tables' will not work, because taking flush locks on view 
          tables is not valid.
          
          Fix:
          Take flush lock for 'base tables' and read lock for 'view table' 
          separately.
          
          Note: most of the patch has been backported from bug#13006947's patch
    ------------------------------------------------------------
    revno: 4095.1.50 [merge]
    committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
    branch nick: Bug13596613_mysql-5.6
    timestamp: Tue 2012-08-14 14:27:19 +0530
    message:
      Null merge from 5.5 to 5.6
        ------------------------------------------------------------
        revno: 2875.392.54 [merge]
        committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
        branch nick: Bug13596613_user_var_mysql-5.5
        timestamp: Tue 2012-08-14 14:21:40 +0530
        message:
          merge from 5.1 to 5.5
            ------------------------------------------------------------
            revno: 2661.851.30
            committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
            branch nick: Bug13596613_user_var
            timestamp: Tue 2012-08-14 14:11:01 +0530
            message:
              Bug#13596613:SHOW SLAVE STATUS GIVES WRONG OUTPUT WITH
              MASTER-MASTER AND USING SET USE
              
              Problem:
              =======
              In a master-master set-up, a master can show a wrong
              'SHOW SLAVE STATUS' output.
              
              Requirements:
              - master-master
              - log_slave_updates
              
              This is caused when using SET user-variables and then using
              it to perform writes. From then on the master that performed
              the insert will have a SHOW SLAVE STATUS that is wrong and  
              it will never get updated until a write happens on the other
              master. On"Master A" the "exec_master_log_pos" is not
              getting updated.
              
              Analysis:
              ========
              Slave receives a "User_var" event from the master and after
              applying the event, when "log_slave_updates" option is
              enabled the slave tries to write this applied event into
              its own binary log. At the time of writing this event the
              slave should use the "originating server-id". But in the
              above case the sever always logs the  "user var events"
              by using its global server-id. Due to this in a
              "master-master" replication when the event comes back to the
              originating server the "User_var_event" doesn't get skipped.
              "User_var_events" are context based events and they always
              follow with a query event which marks their end of group.
              Due to the above mentioned problem with "User_var_event"
              logging the "User_var_event" never gets skipped where as
              its corresponding "query_event" gets skipped. Hence the
              "User_var" event always waits for the next "query event"
              and the "Exec_master_log_position" does not get updated
              properly.
              
              Fix:
              ===
              `MYSQL_BIN_LOG::write' function is used to write events
              into binary log. Within this function a new object for
              "User_var_log_event" is created and this new object is used
              to write the "User_var" event in the binlog. "User var"
              event is inherited from "Log_event". This "Log_event" has
              different overloaded constructors. When a "THD" object
              is present "Log_event(thd,...)" constructor should be used
              to initialise the objects and in the absence of a valid
              "THD" object "Log_event()" minimal constructor should be
              used. In the above mentioned problem always default minimal
              constructor was used which is incorrect. This minimal
              constructor is replaced with "Log_event(thd,...)".
    ------------------------------------------------------------
    revno: 4095.1.49
    committer: Alexander Barkov <alexander.barkov@oracle.com>
    branch nick: mysql-5.6.b14140927
    timestamp: Tue 2012-08-14 11:54:01 +0400
    message:
      Bug#14140927 IS_EQUALS() IS BOGUS FOR FIELD_GEOM, HURTING IN-PLACE ALTER
      
      Problem: IN-PLACE ALTER TABLE did not work for tables having
      at least one GEOMETRY column:
      Field_geom::is_equal() was missing, so the inherited Field_blob::is_equal()
      was called for GEOMETRY columns, which never returned "true".
      
      Fix: implementing a proper is_equal() for Field_geom.
    ------------------------------------------------------------
    revno: 4095.1.48
    committer: kevin.lewis@oracle.com
    branch nick: mysql-5.6
    timestamp: Mon 2012-08-13 15:29:15 -0600
    message:
      Bug#14320968 - Problems with innodb-multiple-tablespaces.test
      There is one occurance of this test failing in the week since the fixe was pushed.
      This change is just to the testcase.  It stops using the control file aa.ibd
      which was not important to the test.  The aa.isl file was somehow removed
      by InnoDB or was not created.  Now the test uses a copy of a previous 
      tablespace, nolink.ibd, in order to create the needed 'wrong' tablespaces.
    ------------------------------------------------------------
    revno: 4095.1.47
    committer: Inaam Rana <inaam.rana@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2012-08-13 06:34:26 -0400
    message:
      Bug#14175020 INCONSISTENT NAME FOR INNODB_MAX_IO_CAPACITY OPTION
      
      rb://1185
      approved by: Marko Makela
      
      Rename innodb_max_io_capacity to innodb_io_capacity_max so that it is
      alphabetically closer to innodb_io_capacity. Makes for better
      documentation. 
    ------------------------------------------------------------
    revno: 4095.1.46 [merge]
    committer: Mattias Jonsson <mattias.jonsson@oracle.com>
    branch nick: topush-5.6
    timestamp: Mon 2012-08-13 12:16:37 +0200
    message:
      merge
        ------------------------------------------------------------
        revno: 2875.392.53 [merge]
        committer: Mattias Jonsson <mattias.jonsson@oracle.com>
        branch nick: topush-5.5
        timestamp: Mon 2012-08-13 11:21:28 +0200
        message:
          merge
            ------------------------------------------------------------
            revno: 2875.400.1
            committer: Mattias Jonsson <mattias.jonsson@oracle.com>
            branch nick: b14342883-55
            timestamp: Thu 2012-08-09 12:51:37 +0200
            message:
              Bug#14342883: SELECT QUERY RETURNS NOT ALL
              ROWS THAT ARE EXPECTED
              
              For non range/list partitioned tables (i.e. HASH/KEY):
              
              When prune_partitions finds a multi-range list
              (or in this test '<>') for a field of the partition index,
              even if it cannot make any use of the multi-range,
              it will continue with the next field of the partition index
              and use that for pruning (even if it the previous
              field could not be used). This results in partitions is
              pruned away, leaving partitions that only matches
              the last field in the partition index, and will exclude
              partitions which might match any previous fields.
              
              Fixed by skipping rest of partitioning key fields/parts
              if current key field/part could not be used.
              
              Also notice it is the order of the fields in the CREATE TABLE
              statement that triggers this bug, not the order of fields in
              primary/unique key or PARTITION BY KEY ().
              It must not be the last field in the partitioning expression that
              is not equal (or have a non single point range).
              I.e. the partitioning index is created with the same field order
              as in the CREATE TABLE. And for the bug to appear
              the last field must be a single point and some previous field
              must be a multi-point range.
    ------------------------------------------------------------
    revno: 4095.1.45
    committer: Inaam Rana <inaam.rana@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2012-08-13 05:59:04 -0400
    message:
      Bug#14469086 USE NEW FORMULA FOR INNODB_MAX_IO_CAPACITY DEFAULT
      
      rb://1210
      approved by: Marko Makela
      
      Use following formula for startup default value of
      innodb_max_io_capacity.
      
      max_io_capacity = max(2000, 2 * io_capacity)
    ------------------------------------------------------------
    revno: 4095.1.44
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: 5.6
    timestamp: Mon 2012-08-13 16:31:09 +1000
    message:
      Bug #14407888 - I_INNODB.INNODB-BUG-14146134 FAILURE WITH INNODB: WARNING: A LONG SEMAPHORE WAIT
      
      Fix the test so that we do the SELECT phase of the test before the ALTER
      thread acquires both the index lock and the data dictionary latches. Add
      two new DEBUG_SYNC() points to achieve the desired effect.
      
      rb://1218 Approved by Marko Makela
    ------------------------------------------------------------
    revno: 4095.1.43
    committer: Alexander Barkov <alexander.barkov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Sat 2012-08-11 18:27:56 +0400
    message:
      Refactoring:
      - Introducing Arg_comparator::get_date_from_const() and
        moving a part of Arg_comparator::can_compare_as_dates() into it.
      - Changing the logic of the remaining part of
        Arg_comparator::can_compare_as_dates() to make it easier to read.
      - Removing Arg_comparator::enum_date_cmp_type as it's not needed any more.
    ------------------------------------------------------------
    revno: 4095.1.42 [merge]
    committer: Venkata Sidagam <venkata.sidagam@oracle.com>
    branch nick: 5.6
    timestamp: Sat 2012-08-11 16:00:25 +0530
    message:
      Bug #13115401: -SSL-KEY VALUE IS NOT VALIDATED AND IT ALLOWS INSECURE 
                     CONNECTIONS IF SPE
      
      Merged from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.392.52 [merge]
        committer: Venkata Sidagam <venkata.sidagam@oracle.com>
        branch nick: 5.5
        timestamp: Sat 2012-08-11 15:52:11 +0530
        message:
          Bug #13115401: -SSL-KEY VALUE IS NOT VALIDATED AND IT ALLOWS INSECURE 
          CONNECTIONS IF SPE
          
          Merged from mysql-5.1 to mysql-5.5
            ------------------------------------------------------------
            revno: 2661.851.29
            committer: Venkata Sidagam <venkata.sidagam@oracle.com>
            branch nick: 5.1
            timestamp: Sat 2012-08-11 15:43:04 +0530
            message:
              Bug #13115401: -SSL-KEY VALUE IS NOT VALIDATED AND IT ALLOWS INSECURE 
                             CONNECTIONS IF SPE
              
              Problem description: -ssl-key value is not validated, you can assign any bogus 
              text to --ssl-key and it is not verified that it exists, and more importantly, 
              it allows the client to connect to mysqld.
              
              Fix: Added proper validations checks for --ssl-key.
              
              Note:
              1) Documentation changes require for 5.1, 5.5, 5.6 and trunk in the sections
                 listed below and the details are :
              
               http://dev.mysql.com/doc/refman/5.6/en/ssl-options.html#option_general_ssl
                  and
               REQUIRE SSL section of
               http://dev.mysql.com/doc/refman/5.6/en/grant.html
              
              2) Client having with option '--ssl', should able to get ssl connection. This 
              will be implemented as part of separate fix in 5.6 and trunk.
    ------------------------------------------------------------
    revno: 4095.1.41
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: 5.6
    timestamp: Sat 2012-08-11 03:52:27 +1000
    message:
      Remove debug fprintf().
    ------------------------------------------------------------
    revno: 4095.1.40
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: 5.6
    timestamp: Sat 2012-08-11 03:47:04 +1000
    message:
      Bug#14219624 - ALTER TABLE...ADD COL AUTO_INCREMENT DOES NOT OBEY AUTO_INCREMENT_OFFSET
      
      Follow up fix. The changes exposed an existing bug in mach_write_int_type()
      on big-endian hardware.
    ------------------------------------------------------------
    revno: 4095.1.39 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2012-08-10 16:43:29 +0300
    message:
      Merge mysql-5.6 to working copy.
        ------------------------------------------------------------
        revno: 4095.5.1
        committer: Alexander Barkov <alexander.barkov@oracle.com>
        branch nick: mysql-5.6
        timestamp: Fri 2012-08-10 17:28:30 +0400
        message:
          Removing duplicate code.
    ------------------------------------------------------------
    revno: 4095.1.38
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2012-08-10 16:33:25 +0300
    message:
      Bug#14240576 ASSERT !INDEX->TRX_ID || INDEX->TRX_ID > REC_TRX_ID,
      TRX_UNDO_PREV_VERSION_BUILD
      
      This was a bogus assertion written by me. In a core dump
      that I analyzed, we got a situation like this.
      
      con1(trx 0x22fd1)> ALTER TABLE ... -- online rebuild
      con2(trx 0x22fd2)> update the table; commit;
      con1(trx 0x22fd1)> ALTER TABLE finishes
      ... purge did not yet take care of the old undo logs of trx 0x22fd2
      con3(trx 0x22ff9)> BEGIN;UPDATE;ROLLBACK; -- assertion failure
      
      The assertion is simply bogus, because the old copy of the table will
      remain accessible to transactions that started after the ALTER TABLE
      but finished before the ALTER TABLE completed.
    ------------------------------------------------------------
    revno: 4095.1.37
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2012-08-10 16:30:02 +0300
    message:
      InnoDB test case clean-up from Matthias Leich.
      
      innodb_bug13807811
         - improved formatting
         - make the store original innodb settings
           + reset at test end future proof by
             avoiding that the current defaults are printed
      
      innodb_bug13867871
         - improved formatting
         - add
           --source include/wait_until_disconnected.inc
         The test tends to crash.
    ------------------------------------------------------------
    revno: 4095.1.36
    committer: Georgi Kodinov <Georgi.Kodinov@Oracle.com>
    branch nick: B14482472-5.6
    timestamp: Fri 2012-08-10 14:48:02 +0300
    message:
      Bug #14482472: CLIENT_CONNECT_ATTRS AND 
      CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA USE THE SAME ID
      
      Fixed CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA to take the 
      next available bit (21)
    ------------------------------------------------------------
    revno: 4095.1.35
    committer: Manish Kumar<manish.4.kumar@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2012-08-10 15:49:16 +0530
    message:
      BUG#13886150 - RPL.RPL_INCIDENT FAILS ON PB2 SPORADICALLY DUE TO TIMEOUT 
            
      Problem: rpl.rpl_incident fails on pb2 sporadically due to timeout in
               include/wait_for_slave_param.inc. Apart from generic
               linux(linux2.6-x86-64bit, where we have knows timeout issues),
               the failure was observed on gcov-linux-x86_64 and 
               rhel5-x86-32bit. The test is passing in retry attempts in just
               257 milliseconds, it means it might be hanging sometime in 
               include/wait_for_slave_param.inc.
                     
      Fix: Adding a force-restart option to the test will restart the server
           before starting to execute the test.
    ------------------------------------------------------------
    revno: 4095.1.34
    committer: Astha Pareek <astha.pareek@oracle.com>
    branch nick: mysql-5.6-bug-14340819
    timestamp: Fri 2012-08-10 15:09:26 +0530
    message:
      BUG#14340819 MTR NOT MASKING THE WARNING NUMBER AFTER CHANGE MASTER
      IN RPL_SLAVE_NET_TIMEOUT 
      
      Problem:
      MTR does not mask the warning number being thrown after change master in
      rpl_slave_net_timeout.test. Ideally all such warning numbers should
      be masked with #. But for
      mysql-test/suite/large_tests/r/rpl_slave_net_timeout.test, 1st warning
      number is masked properly, but it fails to mask the 2nd warning number,
      causes a result mismatch for this test. 
      
      Fix:
      Masked the warning number for rpl_slave_net_timeout.test
    ------------------------------------------------------------
    revno: 4095.1.33
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2012-08-10 16:53:44 +0800
    message:
      fix Bug #14347352 - FTS INNODB READONLY WORKLOAD CRASHES MYSQL
            
      rb://1203 approved by Sunny Bains
    ------------------------------------------------------------
    revno: 4095.1.32
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: 5.6
    timestamp: Fri 2012-08-10 17:15:17 +1000
    message:
      Bug#14143600 - CRASH WHEN STARTING WITH READ-ONLY INNODB MEDIA
      
      Check if the system tablespace, REDO log files and the UNDO tablespace files
      can be opened in RW mode. If that fails then print an error message and exit.
      
      rb://1212 Approved by Jimmy Yang.
    ------------------------------------------------------------
    revno: 4095.1.31
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: 5.6
    timestamp: Fri 2012-08-10 16:49:16 +1000
    message:
      Bug#14219624 - ALTER TABLE...ADD COL AUTO_INCREMENT DOES NOT OBEY AUTO_INCREMENT_OFFSET
      
      Followup fix.
    ------------------------------------------------------------
    revno: 4095.1.30
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: 5.6
    timestamp: Fri 2012-08-10 15:42:33 +1000
    message:
      Bug#14219624 - ALTER TABLE...ADD COL AUTO_INCREMENT DOES NOT OBEY AUTO_INCREMENT_OFFSET
      
      Follow up fix.
    ------------------------------------------------------------
    revno: 4095.1.29
    committer: Allen lai <zheng.lai@oracle.com>
    branch nick: mysql-bug14366547
    timestamp: Fri 2012-08-10 12:30:08 +0800
    message:
      Bug#14366547 - INCONSISTENCY BETWEEN INNODB AND MYSQL INDEX LIST, if the index is a InnoDB temporary index, don't report the error.
    ------------------------------------------------------------
    revno: 4095.1.28
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: 5.6
    timestamp: Fri 2012-08-10 10:45:56 +1000
    message:
      Bug#14219624 - ALTER TABLE...ADD COL AUTO_INCREMENT DOES NOT OBEY AUTO_INCREMENT_OFFSET
      
      The bug synopsis is wrong. The online code didn't really implement the
      AUTOINC handling properly. Not handling the increment offset was only
      one of the issues.
      
        1. Did not use the AUTO_INCREMENT_OFFSET
        2. Next value calculation was wrong
        3. Did not store the correct next value to the table counter once the
           build was completed
        4. innodb-alter-autoinc.test was broken
        5. Did not handle FLOAT and DOUBLE AUTOINC columns
        6. Did not check for overflow for different column types
        7. Did no handle unsigned integer types.
      
      In addition there is some minor code tidy up. Also, prevent copying of ha_innobase_inplace_ctx class.
      
      rb://1209 Approved by Jimmy Yang.
    ------------------------------------------------------------
    revno: 4095.1.27 [merge]
    committer: Sergey Glukhov <sergey.glukhov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-09 16:31:53 +0400
    message:
      automerge
        ------------------------------------------------------------
        revno: 4095.4.4
        committer: Krunal Bauskar krunal.bauskar@oracle.com
        branch nick: mysql-5.6
        timestamp: Thu 2012-08-09 17:31:17 +0530
        message:
          Bug #14394071 	FOREIGN KEY NAMES HANDLING IS INCONSISTENT
          
          ALTER TABLE ... DROP FOREIGN KEY <key-name> (ALGO=COPY) use to work in 
          case-sensitive fashion (key-name check).
          
          While all other flavors viz. 
          
          - ALTER TABLE .... ADD FOREIGN KEY (ALGO=COPY/INPLACE), 
          - CREATE TABLE with FOREIGN KEY
          - ALTER TABLE .... DROP FOREIGN KEY (ALGO=INPLACE) 
          work in case-insensitive fashion.
          
          Fixed ALTER TABLE .... DROP FOREIGN KEY (ALGO=COPY) to 
          behave in case-insensitive fashion.
          
          Review ID:  http://bur03.no.oracle.com/rb/r/1207/
          Reviewed by: Marko
          
          
          innodb-suite
          The servers were restarted 28 times
          Spent 450.052 of 167 seconds executing testcases
          
          Completed: All 146 tests were successful.
          
          44 tests were skipped, 23 by the test itself.
          
          Relevant TC for bug:
          i_innodb.innodb-bug-14394071             w1 [ pass ]    144
          
          
          main-suite:
          The servers were restarted 122 times
          Spent 496.884 of 227 seconds executing testcases
          
          Completed: All 698 tests were successful.
          
          108 tests were skipped, 59 by the test itself.
        ------------------------------------------------------------
        revno: 4095.4.3
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.6
        timestamp: Thu 2012-08-09 14:55:01 +0300
        message:
          Fix a race condition in a test.
        ------------------------------------------------------------
        revno: 4095.4.2
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.6
        timestamp: Thu 2012-08-09 14:54:21 +0300
        message:
          Require innodb_page_size=16k.
        ------------------------------------------------------------
        revno: 4095.4.1
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.6
        timestamp: Thu 2012-08-09 14:53:15 +0300
        message:
          Clean up the test clean-up.
    ------------------------------------------------------------
    revno: 4095.1.26 [merge]
    committer: Sergey Glukhov <sergey.glukhov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-09 16:09:58 +0400
    message:
      5.5 -> 5.6 merge
        ------------------------------------------------------------
        revno: 2875.392.51 [merge]
        committer: Sergey Glukhov <sergey.glukhov@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2012-08-09 15:50:29 +0400
        message:
          5.1 -> 5.5 merge
            ------------------------------------------------------------
            revno: 2661.851.28
            committer: Sergey Glukhov <sergey.glukhov@oracle.com>
            branch nick: mysql-5.1
            timestamp: Thu 2012-08-09 15:34:52 +0400
            message:
              Bug #14409015 	MEMORY LEAK WHEN REFERENCING OUTER FIELD IN HAVING
              When resolving outer fields, Item_field::fix_outer_fields()
              creates new Item_refs for each execution of a prepared statement, so
              these must be allocated in the runtime memroot. The memroot switching
              before resolving JOIN::having causes these to be allocated in the
              statement root, leaking memory for each PS execution.
    ------------------------------------------------------------
    revno: 4095.1.25
    committer: Jorgen Loland <jorgen.loland@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-09 13:45:15 +0200
    message:
      Bug#14208922: fix regression
    ------------------------------------------------------------
    revno: 4095.1.24
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-09 14:20:26 +0300
    message:
      Followup to vasil.dimov@oracle.com-20120808134808-u6l6mbi3f8ubzay2
      
      InnoDB may complain about the table name during recovery, suppress that
      since it disturbs mtr.
    ------------------------------------------------------------
    revno: 4095.1.23
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-09 13:41:32 +0300
    message:
      Followup to vasil.dimov@oracle.com-20120808134808-u6l6mbi3f8ubzay2
      
      innodb_bug14175080 should not be run in embedded mode
    ------------------------------------------------------------
    revno: 4095.1.22
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-09 13:37:54 +0300
    message:
      Followup to vasil.dimov@oracle.com-20120808134808-u6l6mbi3f8ubzay2
      
      innodb_bug14175080 should not be run on Valgrind like other tests
      that crash the server.
    ------------------------------------------------------------
    revno: 4095.1.21
    committer: Alfranio Correia <alfranio.correia@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-09 11:26:52 +0100
    message:
      Post-push fix for BUG#12334346.
    ------------------------------------------------------------
    revno: 4095.1.20
    committer: Alfranio Correia <alfranio.correia@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-09 11:05:01 +0100
    message:
      Backported the following bundles from mysql-trunk:
      
        . revno: 4167.1.6
          revision-id: alfranio.correia@oracle.com-20120804165626-s6lvgo59aa469o1h
      
        . revno: 4167.1.3
          revision-id: alfranio.correia@oracle.com-20120803190050-lhyxo6wmgkipq6dv
      
        . revno: 4138.1.1
          revision-id: alfranio.correia@oracle.com-20120731141810-b2405od5xnk017rl
      
      Backported BUG 13804728 from trunk to 5.6.
      ------------------------------------------
      
      This patch is based on the patch for BUG 12334346 which was not
      pushed.
      
      The type of the worker's repository is dictated by the coordinator, i.e.
      the relay log info's repository. So when the latter is changed the
      former is supposed to be automatically changed too.
      
      However, due to a bug this was not happening making replication fail.
      It turns out though that the worker's repository cannot be changed
      if there are gaps because this requires to read information from one
      repository and write it to another and this may cause problems for
      the bitmap allocated to keep track of gaps.
      
      In a nutshell, the bitmap's size is defined by an user option and
      there is no guarantee that the recorded size will match the new
      size and this may lead to crashes.
      
      To fix this bug, we could always allocate the bitmap's maximum size
      and prevent any problem. However, we prefer to print a warning message
      and not to change the repository's type if there may be workers with
      gaps.
      
      
      Backported BUG 12334346 from trunk to 5.6.
      ------------------------------------------
                       
      The replication tables had the Master_Id column as the primary key. 
      Despite the suggestive name, it was not supposed to store a server_id
      which is  used to uniquely identify a server, including the master.
      The column was just an internal identifier. 
                             
      Unfortunately, a bug made the slave's server_id be stored instead of a 
      const number such as "zero" thus causing confusion and leading to this
      bug report. 
                             
      To fix the problem, we have done what follows: 
        . Made master_host and master_port slave_master_info's primary key. 
        . Renamed slave_relay_log_info's Master_Id to Id. 
                             
      We also had taken the chance to improve the code as follows: 
        . Removed duplicated code from Rpl_info_factory. 
        . Refactored Rpl_info_handler's interface to avoid passing the 
          primary key as parameter in all the functions. 
        . Refactored the code to allow one to redefine the primary keys 
          without changing the code.
    ------------------------------------------------------------
    revno: 4095.1.19 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-09 10:59:59 +0300
    message:
      Merge mysql-5.5 to mysql-5.6.
        ------------------------------------------------------------
        revno: 2875.392.50 [merge]
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2012-08-09 10:58:08 +0300
        message:
          Merge mysql-5.5 to working copy.
    ------------------------------------------------------------
    revno: 4095.1.18 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-09 10:58:44 +0300
    message:
      Merge mysql-5.6 to working copy.
        ------------------------------------------------------------
        revno: 4095.3.1 [merge]
        committer: Bjorn Munch <bjorn.munch@oracle.com>
        branch nick: main-56
        timestamp: Thu 2012-08-09 09:52:45 +0200
        message:
          null upmerge
            ------------------------------------------------------------
            revno: 2875.399.1
            committer: Bjorn Munch <bjorn.munch@oracle.com>
            branch nick: main-55
            timestamp: Thu 2012-08-09 09:51:34 +0200
            message:
              Small cmake syntax fix to fix to -Werror build breakage
    ------------------------------------------------------------
    revno: 4095.1.17 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-09 10:52:11 +0300
    message:
      Merge from mysql-5.5.
        ------------------------------------------------------------
        revno: 2875.392.49 [merge]
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2012-08-09 10:50:54 +0300
        message:
          Null merge from mysql-5.1.
            ------------------------------------------------------------
            revno: 2661.851.27 [merge]
            committer: Marko M?kel? <marko.makela@oracle.com>
            branch nick: mysql-5.1
            timestamp: Thu 2012-08-09 10:48:25 +0300
            message:
              Merge from mysql-5.1 to working copy.
                ------------------------------------------------------------
                revno: 2661.856.1 [merge]
                committer: Sunanda Menon <sunanda.menon@oracle.com>
                branch nick: mysql-5.1
                timestamp: Thu 2012-08-09 08:50:43 +0200
                message:
                  Merge from mysql-5.1.65-release
                    ------------------------------------------------------------
                    revno: 2661.855.1 [merge]
                    tags: mysql-5.1.65
                    committer: Bjorn Munch <bjorn.munch@oracle.com>
                    branch nick: mysql-5.1.65-release
                    timestamp: Thu 2012-07-12 10:00:14 +0200
                    message:
                      Merge unpushed changes from 5.1.64-release
                        ------------------------------------------------------------
                        revno: 2661.854.4
                        committer: Kent Boortz <kent.boortz@oracle.com>
                        branch nick: mysql-5.1.64-release
                        timestamp: Tue 2012-06-26 16:30:15 +0200
                        message:
                          Solve a linkage problem with "libmysqld" on several Solaris platforms:
                          a multiple definition of 'THD::clear_error()' in (at least)
                          libmysqld.a(lib_sql.o) and libmysqld.a(libfederated_a-ha_federated.o).
                          
                          Patch provided by Ramil Kalimullin.
                        ------------------------------------------------------------
                        revno: 2661.854.3
                        committer: Joerg Bruehe <joerg.bruehe@oracle.com>
                        branch nick: mysql-5.1.64-release
                        timestamp: Thu 2012-06-21 16:26:50 +0200
                        message:
                          Fixing wrong comment syntax (discovered by Kent)
                        ------------------------------------------------------------
                        revno: 2661.854.2
                        committer: Kent Boortz <kent.boortz@oracle.com>
                        branch nick: mysql-5.1.64-release
                        timestamp: Wed 2012-06-20 13:10:13 +0200
                        message:
                          Version for this release build is 5.1.64
                        ------------------------------------------------------------
                        revno: 2661.854.1 [merge]
                        committer: Kent Boortz <kent.boortz@oracle.com>
                        branch nick: mysql-5.1.64-release
                        timestamp: Wed 2012-06-20 13:06:32 +0200
                        message:
                          Merge
    ------------------------------------------------------------
    revno: 4095.1.16 [merge]
    committer: Bjorn Munch <bjorn.munch@oracle.com>
    branch nick: main-56
    timestamp: Thu 2012-08-09 09:42:21 +0200
    message:
      Small cmake syntax fix to fix to -Werror build breakage
        ------------------------------------------------------------
        revno: 2875.398.1
        committer: Bjorn Munch <bjorn.munch@oracle.com>
        branch nick: main-55
        timestamp: Thu 2012-08-09 09:41:12 +0200
        message:
          Small cmake syntax fix to fix to -Werror build breakage
    ------------------------------------------------------------
    revno: 4095.1.15
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-09 10:29:29 +0300
    message:
      Bug#14392805 ASSERT IN ROLLBACK_INPLACE_ALTER_TABLE
      
      When an error (such as a duplicate key error) is detected while
      applying the modification log during online index creation, we would
      clear the 'to_be_dropped' flags on any indexes that were to be dropped
      in the same ALTER TABLE statement. This would cause a debug assertion
      failure during rollback. The fix is to remove the debug assertion on
      rollback.
      
      rb:1208 approved by Sunny Bains
    ------------------------------------------------------------
    revno: 4095.1.14 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2012-08-09 10:25:28 +0300
    message:
      Merge mysql-5.5 to mysql-5.6.
        ------------------------------------------------------------
        revno: 2875.392.48 [merge]
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2012-08-09 10:06:59 +0300
        message:
          Merge mysql-5.1 to mysql-5.5.
            ------------------------------------------------------------
            revno: 2661.851.26
            committer: Marko M?kel? <marko.makela@oracle.com>
            branch nick: mysql-5.1
            timestamp: Thu 2012-08-09 09:55:29 +0300
            message:
              Bug#14399148 INNODB TABLES UNDER LOAD PRODUCE DUPLICATE COPIES OF ROWS
              IN QUERIES
              
              This bug was caused by an incorrect fix of
              Bug#13807811 BTR_PCUR_RESTORE_POSITION() CAN SKIP A RECORD
              
              There was nothing wrong with btr_pcur_restore_position(), but with the
              use of it in the table scan during index creation.
              
              rb:1206 approved by Jimmy Yang
    ------------------------------------------------------------
    revno: 4095.1.13 [merge]
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-5.6-11757312
    timestamp: Wed 2012-08-08 22:45:40 +0530
    message:
      upmerge from mysql-5.5=>mysql-5.6 
        ------------------------------------------------------------
        revno: 2875.392.47 [merge]
        committer: Rohit Kalhans <rohit.kalhans@oracle.com>
        branch nick: mysql-5.5-11757312
        timestamp: Wed 2012-08-08 22:20:05 +0530
        message:
          upmerge from mysql-5.1=>mysql-5.5
            ------------------------------------------------------------
            revno: 2661.851.25
            committer: Rohit Kalhans <rohit.kalhans@oracle.com>
            branch nick: mysql-5.1-11757312
            timestamp: Wed 2012-08-08 22:15:46 +0530
            message:
              BUG#11757312: MYSQLBINLOG DOES NOT ACCEPT INPUT FROM STDIN
              WHEN STDIN IS A PIPE
                          
              Problem: Mysqlbinlog does not accept the input from STDIN when 
              STDIN is a pipe. This prevents the users from passing the input file
              through a shell pipe.    
              
              Background: The my_seek() function does not check if the file descriptor
              passed to it is regular (seekable) file. The check_header() function in
              mysqlbinlog calls the my_b_seek() unconditionally and it fails when
              the underlying file is a PIPE.  
                          
              Resolution: We resolve this problem by checking if the underlying file
              is a regular file by using my_fstat() before calling my_b_seek(). 
              If the underlying file is not seekable we skip the call to my_b_seek()
              in check_header().
    ------------------------------------------------------------
    revno: 4095.1.12
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2012-08-08 16:48:08 +0300
    message:
      Fix Bug#14175080 SERVER HANGS IN STARTUP, IN DICT_STATS_DROP_TABLE()
      
      The problem is that during recovery we "activate" transactions that were
      active during the crash and before completely rolling them back we try to
      drop all temp tables, all this in a single OS thread. The drop of all temp
      tables creates its own trx for deleting rows from mysql.innodb_index_stats
      and if a being recovered transaction as an X lock on the same row in
      mysql.innodb_index_stats then an infinite hang happens.
      
      The fix is not to use persistent stats for temp tables and thus skip the
      removal of relevant rows from mysql.innodb_index_stats during recovery,
      when dropping a temp table.
      
      Approved by:	Marko (http://bur03.no.oracle.com/rb/r/1204/)
    ------------------------------------------------------------
    revno: 4095.1.11 [merge]
    committer: Sergey Glukhov <sergey.glukhov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2012-08-08 14:41:17 +0400
    message:
      automerge
        ------------------------------------------------------------
        revno: 4095.2.1
        committer: Alexander Barkov <alexander.barkov@oracle.com>
        branch nick: mysql-5.6.gis2
        timestamp: Wed 2012-08-08 14:21:39 +0400
        message:
          Bug#11747370 	OPENGIS CONTAINS() DOES NOT WORK ON MULTIPOLYGONS; DISCONNECTS IN SOME CASES
          
          This bug was fixed earlier in mysql-5.1.
          Adding test case from the bug report.
    ------------------------------------------------------------
    revno: 4095.1.10
    committer: Sergey Glukhov <sergey.glukhov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2012-08-08 14:23:44 +0400
    message:
      Bug#14105951 TRIGGER EXECUTION CRASH IN ITEM_REF::REAL_ITEM
      If temporary table is involved in execution process
      original Item ref array can be replaced with references to
      tmp table fields. So on next statement execution it->real_item()
      points to non-existing tmp table fields. Solution is to restore
      Item ref array to its original state in JOIN::cleanup().
    ------------------------------------------------------------
    revno: 4095.1.9 [merge]
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-merge
    timestamp: Wed 2012-08-08 10:00:13 +0200
    message:
      merge 5.6.6-m9-release => 5.6
        ------------------------------------------------------------
        revno: 3911.1.6
        tags: mysql-5.6.6
        committer: Joerg Bruehe <joerg.bruehe@oracle.com>
        branch nick: clone-5.6
        timestamp: Tue 2012-07-17 17:43:47 +0200
        message:
          Add the man page for the "mysql_config_editor" to the RPM spec file.
